/*******************************************************************************
 * Copyright (c) 2015 Eclipse RDF4J contributors, Aduna, and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Distribution License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *******************************************************************************/
/* Generated By:JavaCC: Do not edit this line. SyntaxTreeBuilderTreeConstants.java Version 5.0 */
package org.eclipse.rdf4j.query.parser.serql.ast;

public interface SyntaxTreeBuilderTreeConstants {

	public int JJTQUERYCONTAINER = 0;

	public int JJTVOID = 1;

	public int JJTNAMESPACEDECL = 2;

	public int JJTTUPLEUNION = 3;

	public int JJTTUPLEMINUS = 4;

	public int JJTTUPLEINTERSECT = 5;

	public int JJTGRAPHUNION = 6;

	public int JJTGRAPHMINUS = 7;

	public int JJTGRAPHINTERSECT = 8;

	public int JJTSELECTQUERY = 9;

	public int JJTSELECT = 10;

	public int JJTPROJECTIONELEM = 11;

	public int JJTCONSTRUCTQUERY = 12;

	public int JJTCONSTRUCT = 13;

	public int JJTQUERYBODY = 14;

	public int JJTFROM = 15;

	public int JJTWHERE = 16;

	public int JJTORDERBY = 17;

	public int JJTLIMIT = 18;

	public int JJTOFFSET = 19;

	public int JJTPATHEXPRLIST = 20;

	public int JJTPATHEXPRUNION = 21;

	public int JJTBASICPATHEXPR = 22;

	public int JJTOPTPATHEXPR = 23;

	public int JJTBASICPATHEXPRTAIL = 24;

	public int JJTOPTPATHEXPRTAIL = 25;

	public int JJTEDGE = 26;

	public int JJTNODE = 27;

	public int JJTNODEELEM = 28;

	public int JJTREIFIEDSTAT = 29;

	public int JJTORDEREXPR = 30;

	public int JJTOR = 31;

	public int JJTAND = 32;

	public int JJTBOOLEANCONSTANT = 33;

	public int JJTNOT = 34;

	public int JJTBOUND = 35;

	public int JJTSAMETERM = 36;

	public int JJTISRESOURCE = 37;

	public int JJTISLITERAL = 38;

	public int JJTISURI = 39;

	public int JJTISBNODE = 40;

	public int JJTLANGMATCHES = 41;

	public int JJTREGEX = 42;

	public int JJTEXISTS = 43;

	public int JJTCOMPARE = 44;

	public int JJTCOMPAREANY = 45;

	public int JJTCOMPAREALL = 46;

	public int JJTLIKE = 47;

	public int JJTIN = 48;

	public int JJTINLIST = 49;

	public int JJTCOMPOPERATOR = 50;

	public int JJTVAR = 51;

	public int JJTDATATYPE = 52;

	public int JJTLANG = 53;

	public int JJTLABEL = 54;

	public int JJTNAMESPACE = 55;

	public int JJTLOCALNAME = 56;

	public int JJTSTR = 57;

	public int JJTFUNCTIONCALL = 58;

	public int JJTARGLIST = 59;

	public int JJTURI = 60;

	public int JJTQNAME = 61;

	public int JJTBNODE = 62;

	public int JJTLITERAL = 63;

	public int JJTSTRING = 64;

	public int JJTNULL = 65;

	public String[] jjtNodeName = { "QueryContainer", "void", "NamespaceDecl", "TupleUnion", "TupleMinus",
			"TupleIntersect", "GraphUnion", "GraphMinus", "GraphIntersect", "SelectQuery", "Select", "ProjectionElem",
			"ConstructQuery", "Construct", "QueryBody", "From", "Where", "OrderBy", "Limit", "Offset", "PathExprList",
			"PathExprUnion", "BasicPathExpr", "OptPathExpr", "BasicPathExprTail", "OptPathExprTail", "Edge", "Node",
			"NodeElem", "ReifiedStat", "OrderExpr", "Or", "And", "BooleanConstant", "Not", "Bound", "SameTerm",
			"IsResource", "IsLiteral", "IsURI", "IsBNode", "LangMatches", "Regex", "Exists", "Compare", "CompareAny",
			"CompareAll", "Like", "In", "InList", "CompOperator", "Var", "Datatype", "Lang", "Label", "Namespace",
			"LocalName", "Str", "FunctionCall", "ArgList", "URI", "QName", "BNode", "Literal", "String", "Null", };
}
/* JavaCC - OriginalChecksum=57351b205d67e913125abf0f7b92feda (do not edit this line) */
