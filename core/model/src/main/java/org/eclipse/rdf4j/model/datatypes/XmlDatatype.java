package org.eclipse.rdf4j.model.datatypes;

import java.util.HashMap;

import javax.xml.datatype.Duration;
import javax.xml.datatype.XMLGregorianCalendar;

import org.eclipse.rdf4j.model.IRI;
import org.eclipse.rdf4j.model.vocabulary.XSD;

public enum XmlDatatype {

	DURATION(XSD.DURATION, true, true, false, false, false, false, false),
	DATETIME(XSD.DATETIME, true, false, false, false, false, false, true),
	DATETIMESTAMP(XSD.DATETIMESTAMP, false, false, false, true, false, false, true),
	DAYTIMEDURATION(XSD.DAYTIMEDURATION, false, true, false, true, false, false, false),
	TIME(XSD.TIME, true, false, false, false, false, false, true),
	DATE(XSD.DATE, true, false, false, false, false, false, true),
	GYEARMONTH(XSD.GYEARMONTH, true, false, false, false, false, false, true),
	GYEAR(XSD.GYEAR, true, false, false, false, false, false, true),
	GMONTHDAY(XSD.GMONTHDAY, true, false, false, false, false, false, true),
	GDAY(XSD.GDAY, true, false, false, false, false, false, true),
	GMONTH(XSD.GMONTH, true, false, false, false, false, false, true),
	STRING(XSD.STRING, true, false, false, false, false, false, false),
	BOOLEAN(XSD.BOOLEAN, true, false, false, false, false, false, false),
	BASE64BINARY(XSD.BASE64BINARY, true, false, false, false, false, false, false),
	HEXBINARY(XSD.HEXBINARY, true, false, false, false, false, false, false),
	FLOAT(XSD.FLOAT, true, false, false, false, false, true, false),
	DECIMAL(XSD.DECIMAL, true, false, false, false, true, false, false),
	DOUBLE(XSD.DOUBLE, true, false, false, false, false, true, false),
	ANYURI(XSD.ANYURI, true, false, false, false, false, false, false),
	QNAME(XSD.QNAME, true, false, false, false, false, false, false),
	NOTATION(XSD.NOTATION, true, false, false, false, false, false, false),
	NORMALIZEDSTRING(XSD.NORMALIZEDSTRING, false, false, false, true, false, false, false),
	TOKEN(XSD.TOKEN, false, false, false, true, false, false, false),
	LANGUAGE(XSD.LANGUAGE, false, false, false, true, false, false, false),
	NMTOKEN(XSD.NMTOKEN, false, false, false, true, false, false, false),
	NMTOKENS(XSD.NMTOKENS, false, false, false, true, false, false, false),
	NAME(XSD.NAME, false, false, false, true, false, false, false),
	NCNAME(XSD.NCNAME, false, false, false, true, false, false, false),
	ID(XSD.ID, false, false, false, true, false, false, false),
	IDREF(XSD.IDREF, false, false, false, true, false, false, false),
	IDREFS(XSD.IDREFS, false, false, false, true, false, false, false),
	ENTITY(XSD.ENTITY, false, false, false, true, false, false, false),
	ENTITIES(XSD.ENTITIES, false, false, false, true, false, false, false),
	INTEGER(XSD.INTEGER, false, false, true, true, true, false, false),
	LONG(XSD.LONG, false, false, true, true, true, false, false),
	INT(XSD.INT, false, false, true, true, true, false, false),
	SHORT(XSD.SHORT, false, false, true, true, true, false, false),
	BYTE(XSD.BYTE, false, false, true, true, true, false, false),
	NON_POSITIVE_INTEGER(XSD.NON_POSITIVE_INTEGER, false, false, true, true, true, false, false),
	NEGATIVE_INTEGER(XSD.NEGATIVE_INTEGER, false, false, true, true, true, false, false),
	NON_NEGATIVE_INTEGER(XSD.NON_NEGATIVE_INTEGER, false, false, true, true, true, false, false),
	POSITIVE_INTEGER(XSD.POSITIVE_INTEGER, false, false, true, true, true, false, false),
	UNSIGNED_LONG(XSD.UNSIGNED_LONG, false, false, true, true, true, false, false),
	UNSIGNED_INT(XSD.UNSIGNED_INT, false, false, true, true, true, false, false),
	UNSIGNED_SHORT(XSD.UNSIGNED_SHORT, false, false, true, true, true, false, false),
	UNSIGNED_BYTE(XSD.UNSIGNED_BYTE, false, false, true, true, true, false, false),
	YEARMONTHDURATION(XSD.YEARMONTHDURATION, false, true, false, true, false, false, false);

	private final IRI iri;
	private final boolean primitive;
	private final boolean duration;
	private final boolean integer;
	private final boolean derived;
	private final boolean decimal;
	private final boolean floatingPoint;
	private final boolean calendar;

	// a lookup table so we don't need to use IRI comparison when comparing two datatypes
	private HashMap<XmlDatatype, Integer> valueComparatorLookup;

	XmlDatatype(IRI iri, boolean primitive, boolean duration, boolean integer, boolean derived, boolean decimal,
			boolean floatingPoint, boolean calendar) {
		this.iri = iri;
		this.primitive = primitive;
		this.duration = duration;
		this.integer = integer;
		this.derived = derived;
		this.decimal = decimal;
		this.floatingPoint = floatingPoint;
		this.calendar = calendar;
	}

	/**
	 * Checks whether the supplied datatype is a primitive XML Schema datatype.
	 *
	 * @return true if the datatype is a primitive type
	 */
	public boolean isPrimitiveDatatype() {
		return primitive;
	}

	/**
	 * Checks whether the supplied datatype is a derived XML Schema datatype.
	 *
	 * @return true if the datatype is a derived type
	 */
	public boolean isDerivedDatatype() {
		return derived;
	}

	/**
	 * Checks whether the supplied datatype is a built-in XML Schema datatype.
	 *
	 * @return true if it is a primitive or derived XML Schema type
	 */
	public boolean isBuiltInDatatype() {
		return isPrimitiveDatatype() || isDerivedDatatype();
	}

	/**
	 * Checks whether the supplied datatype is a numeric datatype, i.e.if it is equal to xsd:float, xsd:double,
	 * xsd:decimal or one of the datatypes derived from xsd:decimal.
	 *
	 * @return true of it is a decimal or floating point type
	 */
	public boolean isNumericDatatype() {
		return isDecimalDatatype() || isFloatingPointDatatype();
	}

	/**
	 * Checks whether the supplied datatype is equal to xsd:decimal or one of the built-in datatypes that is derived
	 * from xsd:decimal.
	 *
	 * @return true if it is a decimal datatype
	 */
	public boolean isDecimalDatatype() {
		return decimal;
	}

	/**
	 * Checks whether the supplied datatype is equal to xsd:integer or one of the built-in datatypes that is derived
	 * from xsd:integer.
	 *
	 * @return true if it is an integer type
	 */
	public boolean isIntegerDatatype() {
		return integer;
	}

	/**
	 * Checks whether the supplied datatype is equal to xsd:float or xsd:double.
	 *
	 * @return true if it is a floating point type
	 */
	public boolean isFloatingPointDatatype() {
		return floatingPoint;
	}

	/**
	 * Checks whether the supplied datatype is equal to xsd:dateTime, xsd:date, xsd:time, xsd:gYearMonth, xsd:gMonthDay,
	 * xsd:gYear, xsd:gMonth or xsd:gDay.These are the primitive datatypes that represent dates and/or times.
	 *
	 * @see XMLGregorianCalendar
	 * @return true if it is a calendar type
	 */
	public boolean isCalendarDatatype() {
		return calendar;
	}

	/**
	 * Checks whether the supplied datatype is equal to xsd:duration, xsd:dayTimeDuration, xsd:yearMonthDuration. These
	 * are the datatypes that represents durations.
	 *
	 * @see Duration
	 * @return true if it is a duration type
	 */
	public boolean isDurationDatatype() {
		return duration;
	}

	/**
	 * Checks whether the supplied datatype is ordered.The values of an ordered datatype can be compared to each other
	 * using operators like <tt>&lt;</tt> and <tt>&gt;</tt>.
	 *
	 * @return true if the datatype is ordered
	 */
	public boolean isOrderedDatatype() {
		return isNumericDatatype() || isCalendarDatatype();
	}

	static HashMap<IRI, XmlDatatype> reverseLookup = new HashMap<>();

	static {
		for (XmlDatatype value : XmlDatatype.values()) {
			reverseLookup.put(value.iri, value);
		}
	}

	public static XmlDatatype from(IRI datatype) {
		return reverseLookup.get(datatype);
	}

	public IRI getIri() {
		return iri;
	}

	public int valueComparatorTo(XmlDatatype compareTo) {
		if (valueComparatorLookup == null) {
			createLookupTable();
		}

		return valueComparatorLookup.get(compareTo);
	}

	private void createLookupTable() {
		HashMap<XmlDatatype, Integer> valueComparatorLookup = new HashMap<>();

		if (this == DURATION) {
			valueComparatorLookup.put(DURATION, 0);
			valueComparatorLookup.put(DATETIME, 20);
			valueComparatorLookup.put(DATETIMESTAMP, 20);
			valueComparatorLookup.put(DAYTIMEDURATION, 20);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 20);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, 16);
			valueComparatorLookup.put(DOUBLE, 6);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == DATETIME) {
			valueComparatorLookup.put(DURATION, -20);
			valueComparatorLookup.put(DATETIME, 0);
			valueComparatorLookup.put(DATETIMESTAMP, -5);
			valueComparatorLookup.put(DAYTIMEDURATION, -5);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 4);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, -4);
			valueComparatorLookup.put(DOUBLE, -14);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == DATETIMESTAMP) {
			valueComparatorLookup.put(DURATION, -20);
			valueComparatorLookup.put(DATETIME, 5);
			valueComparatorLookup.put(DATETIMESTAMP, 0);
			valueComparatorLookup.put(DAYTIMEDURATION, -5);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 9);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, -4);
			valueComparatorLookup.put(DOUBLE, -14);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == DAYTIMEDURATION) {
			valueComparatorLookup.put(DURATION, -20);
			valueComparatorLookup.put(DATETIME, 5);
			valueComparatorLookup.put(DATETIMESTAMP, 5);
			valueComparatorLookup.put(DAYTIMEDURATION, 0);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 5);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, -4);
			valueComparatorLookup.put(DOUBLE, -14);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == TIME) {
			valueComparatorLookup.put(DURATION, 16);
			valueComparatorLookup.put(DATETIME, 16);
			valueComparatorLookup.put(DATETIMESTAMP, 16);
			valueComparatorLookup.put(DAYTIMEDURATION, 16);
			valueComparatorLookup.put(TIME, 0);
			valueComparatorLookup.put(DATE, 16);
			valueComparatorLookup.put(GYEARMONTH, 13);
			valueComparatorLookup.put(GYEAR, 13);
			valueComparatorLookup.put(GMONTHDAY, 13);
			valueComparatorLookup.put(GDAY, 13);
			valueComparatorLookup.put(GMONTH, 13);
			valueComparatorLookup.put(STRING, 1);
			valueComparatorLookup.put(BOOLEAN, 18);
			valueComparatorLookup.put(BASE64BINARY, 18);
			valueComparatorLookup.put(HEXBINARY, 12);
			valueComparatorLookup.put(FLOAT, 14);
			valueComparatorLookup.put(DECIMAL, 16);
			valueComparatorLookup.put(DOUBLE, 16);
			valueComparatorLookup.put(ANYURI, 19);
			valueComparatorLookup.put(QNAME, 35);
			valueComparatorLookup.put(NOTATION, 38);
			valueComparatorLookup.put(NORMALIZEDSTRING, 6);
			valueComparatorLookup.put(TOKEN, -6);
			valueComparatorLookup.put(LANGUAGE, 8);
			valueComparatorLookup.put(NMTOKEN, 38);
			valueComparatorLookup.put(NMTOKENS, 38);
			valueComparatorLookup.put(NAME, 38);
			valueComparatorLookup.put(NCNAME, 38);
			valueComparatorLookup.put(ID, 43);
			valueComparatorLookup.put(IDREF, 43);
			valueComparatorLookup.put(IDREFS, 43);
			valueComparatorLookup.put(ENTITY, 47);
			valueComparatorLookup.put(ENTITIES, 47);
			valueComparatorLookup.put(INTEGER, 11);
			valueComparatorLookup.put(LONG, 8);
			valueComparatorLookup.put(INT, 11);
			valueComparatorLookup.put(SHORT, 1);
			valueComparatorLookup.put(BYTE, 18);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 6);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 6);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 6);
			valueComparatorLookup.put(POSITIVE_INTEGER, 4);
			valueComparatorLookup.put(UNSIGNED_LONG, -1);
			valueComparatorLookup.put(UNSIGNED_INT, -1);
			valueComparatorLookup.put(UNSIGNED_SHORT, -1);
			valueComparatorLookup.put(UNSIGNED_BYTE, -1);
			valueComparatorLookup.put(YEARMONTHDURATION, -5);
		} else if (this == DATE) {
			valueComparatorLookup.put(DURATION, -20);
			valueComparatorLookup.put(DATETIME, -4);
			valueComparatorLookup.put(DATETIMESTAMP, -9);
			valueComparatorLookup.put(DAYTIMEDURATION, -5);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 0);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, -4);
			valueComparatorLookup.put(DOUBLE, -14);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == GYEARMONTH) {
			valueComparatorLookup.put(DURATION, 3);
			valueComparatorLookup.put(DATETIME, 3);
			valueComparatorLookup.put(DATETIMESTAMP, 3);
			valueComparatorLookup.put(DAYTIMEDURATION, 3);
			valueComparatorLookup.put(TIME, -13);
			valueComparatorLookup.put(DATE, 3);
			valueComparatorLookup.put(GYEARMONTH, 0);
			valueComparatorLookup.put(GYEAR, 5);
			valueComparatorLookup.put(GMONTHDAY, 12);
			valueComparatorLookup.put(GDAY, 21);
			valueComparatorLookup.put(GMONTH, 12);
			valueComparatorLookup.put(STRING, -12);
			valueComparatorLookup.put(BOOLEAN, 5);
			valueComparatorLookup.put(BASE64BINARY, 5);
			valueComparatorLookup.put(HEXBINARY, -1);
			valueComparatorLookup.put(FLOAT, 1);
			valueComparatorLookup.put(DECIMAL, 3);
			valueComparatorLookup.put(DOUBLE, 3);
			valueComparatorLookup.put(ANYURI, 6);
			valueComparatorLookup.put(QNAME, 22);
			valueComparatorLookup.put(NOTATION, 25);
			valueComparatorLookup.put(NORMALIZEDSTRING, -7);
			valueComparatorLookup.put(TOKEN, -13);
			valueComparatorLookup.put(LANGUAGE, -5);
			valueComparatorLookup.put(NMTOKEN, 25);
			valueComparatorLookup.put(NMTOKENS, 25);
			valueComparatorLookup.put(NAME, 25);
			valueComparatorLookup.put(NCNAME, 25);
			valueComparatorLookup.put(ID, 30);
			valueComparatorLookup.put(IDREF, 30);
			valueComparatorLookup.put(IDREFS, 30);
			valueComparatorLookup.put(ENTITY, 34);
			valueComparatorLookup.put(ENTITIES, 34);
			valueComparatorLookup.put(INTEGER, -2);
			valueComparatorLookup.put(LONG, -5);
			valueComparatorLookup.put(INT, -2);
			valueComparatorLookup.put(SHORT, -12);
			valueComparatorLookup.put(BYTE, 5);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(POSITIVE_INTEGER, -9);
			valueComparatorLookup.put(UNSIGNED_LONG, -14);
			valueComparatorLookup.put(UNSIGNED_INT, -14);
			valueComparatorLookup.put(UNSIGNED_SHORT, -14);
			valueComparatorLookup.put(UNSIGNED_BYTE, -14);
			valueComparatorLookup.put(YEARMONTHDURATION, -18);
		} else if (this == GYEAR) {
			valueComparatorLookup.put(DURATION, 3);
			valueComparatorLookup.put(DATETIME, 3);
			valueComparatorLookup.put(DATETIMESTAMP, 3);
			valueComparatorLookup.put(DAYTIMEDURATION, 3);
			valueComparatorLookup.put(TIME, -13);
			valueComparatorLookup.put(DATE, 3);
			valueComparatorLookup.put(GYEARMONTH, -5);
			valueComparatorLookup.put(GYEAR, 0);
			valueComparatorLookup.put(GMONTHDAY, 12);
			valueComparatorLookup.put(GDAY, 21);
			valueComparatorLookup.put(GMONTH, 12);
			valueComparatorLookup.put(STRING, -12);
			valueComparatorLookup.put(BOOLEAN, 5);
			valueComparatorLookup.put(BASE64BINARY, 5);
			valueComparatorLookup.put(HEXBINARY, -1);
			valueComparatorLookup.put(FLOAT, 1);
			valueComparatorLookup.put(DECIMAL, 3);
			valueComparatorLookup.put(DOUBLE, 3);
			valueComparatorLookup.put(ANYURI, 6);
			valueComparatorLookup.put(QNAME, 22);
			valueComparatorLookup.put(NOTATION, 25);
			valueComparatorLookup.put(NORMALIZEDSTRING, -7);
			valueComparatorLookup.put(TOKEN, -13);
			valueComparatorLookup.put(LANGUAGE, -5);
			valueComparatorLookup.put(NMTOKEN, 25);
			valueComparatorLookup.put(NMTOKENS, 25);
			valueComparatorLookup.put(NAME, 25);
			valueComparatorLookup.put(NCNAME, 25);
			valueComparatorLookup.put(ID, 30);
			valueComparatorLookup.put(IDREF, 30);
			valueComparatorLookup.put(IDREFS, 30);
			valueComparatorLookup.put(ENTITY, 34);
			valueComparatorLookup.put(ENTITIES, 34);
			valueComparatorLookup.put(INTEGER, -2);
			valueComparatorLookup.put(LONG, -5);
			valueComparatorLookup.put(INT, -2);
			valueComparatorLookup.put(SHORT, -12);
			valueComparatorLookup.put(BYTE, 5);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(POSITIVE_INTEGER, -9);
			valueComparatorLookup.put(UNSIGNED_LONG, -14);
			valueComparatorLookup.put(UNSIGNED_INT, -14);
			valueComparatorLookup.put(UNSIGNED_SHORT, -14);
			valueComparatorLookup.put(UNSIGNED_BYTE, -14);
			valueComparatorLookup.put(YEARMONTHDURATION, -18);
		} else if (this == GMONTHDAY) {
			valueComparatorLookup.put(DURATION, 3);
			valueComparatorLookup.put(DATETIME, 3);
			valueComparatorLookup.put(DATETIMESTAMP, 3);
			valueComparatorLookup.put(DAYTIMEDURATION, 3);
			valueComparatorLookup.put(TIME, -13);
			valueComparatorLookup.put(DATE, 3);
			valueComparatorLookup.put(GYEARMONTH, -12);
			valueComparatorLookup.put(GYEAR, -12);
			valueComparatorLookup.put(GMONTHDAY, 0);
			valueComparatorLookup.put(GDAY, 9);
			valueComparatorLookup.put(GMONTH, 3);
			valueComparatorLookup.put(STRING, -12);
			valueComparatorLookup.put(BOOLEAN, 5);
			valueComparatorLookup.put(BASE64BINARY, 5);
			valueComparatorLookup.put(HEXBINARY, -1);
			valueComparatorLookup.put(FLOAT, 1);
			valueComparatorLookup.put(DECIMAL, 3);
			valueComparatorLookup.put(DOUBLE, 3);
			valueComparatorLookup.put(ANYURI, 6);
			valueComparatorLookup.put(QNAME, 22);
			valueComparatorLookup.put(NOTATION, 25);
			valueComparatorLookup.put(NORMALIZEDSTRING, -7);
			valueComparatorLookup.put(TOKEN, -13);
			valueComparatorLookup.put(LANGUAGE, -5);
			valueComparatorLookup.put(NMTOKEN, 25);
			valueComparatorLookup.put(NMTOKENS, 25);
			valueComparatorLookup.put(NAME, 25);
			valueComparatorLookup.put(NCNAME, 25);
			valueComparatorLookup.put(ID, 30);
			valueComparatorLookup.put(IDREF, 30);
			valueComparatorLookup.put(IDREFS, 30);
			valueComparatorLookup.put(ENTITY, 34);
			valueComparatorLookup.put(ENTITIES, 34);
			valueComparatorLookup.put(INTEGER, -2);
			valueComparatorLookup.put(LONG, -5);
			valueComparatorLookup.put(INT, -2);
			valueComparatorLookup.put(SHORT, -12);
			valueComparatorLookup.put(BYTE, 5);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(POSITIVE_INTEGER, -9);
			valueComparatorLookup.put(UNSIGNED_LONG, -14);
			valueComparatorLookup.put(UNSIGNED_INT, -14);
			valueComparatorLookup.put(UNSIGNED_SHORT, -14);
			valueComparatorLookup.put(UNSIGNED_BYTE, -14);
			valueComparatorLookup.put(YEARMONTHDURATION, -18);
		} else if (this == GDAY) {
			valueComparatorLookup.put(DURATION, 3);
			valueComparatorLookup.put(DATETIME, 3);
			valueComparatorLookup.put(DATETIMESTAMP, 3);
			valueComparatorLookup.put(DAYTIMEDURATION, 3);
			valueComparatorLookup.put(TIME, -13);
			valueComparatorLookup.put(DATE, 3);
			valueComparatorLookup.put(GYEARMONTH, -21);
			valueComparatorLookup.put(GYEAR, -21);
			valueComparatorLookup.put(GMONTHDAY, -9);
			valueComparatorLookup.put(GDAY, 0);
			valueComparatorLookup.put(GMONTH, -9);
			valueComparatorLookup.put(STRING, -12);
			valueComparatorLookup.put(BOOLEAN, 5);
			valueComparatorLookup.put(BASE64BINARY, 5);
			valueComparatorLookup.put(HEXBINARY, -1);
			valueComparatorLookup.put(FLOAT, 1);
			valueComparatorLookup.put(DECIMAL, 3);
			valueComparatorLookup.put(DOUBLE, 3);
			valueComparatorLookup.put(ANYURI, 6);
			valueComparatorLookup.put(QNAME, 22);
			valueComparatorLookup.put(NOTATION, 25);
			valueComparatorLookup.put(NORMALIZEDSTRING, -7);
			valueComparatorLookup.put(TOKEN, -13);
			valueComparatorLookup.put(LANGUAGE, -5);
			valueComparatorLookup.put(NMTOKEN, 25);
			valueComparatorLookup.put(NMTOKENS, 25);
			valueComparatorLookup.put(NAME, 25);
			valueComparatorLookup.put(NCNAME, 25);
			valueComparatorLookup.put(ID, 30);
			valueComparatorLookup.put(IDREF, 30);
			valueComparatorLookup.put(IDREFS, 30);
			valueComparatorLookup.put(ENTITY, 34);
			valueComparatorLookup.put(ENTITIES, 34);
			valueComparatorLookup.put(INTEGER, -2);
			valueComparatorLookup.put(LONG, -5);
			valueComparatorLookup.put(INT, -2);
			valueComparatorLookup.put(SHORT, -12);
			valueComparatorLookup.put(BYTE, 5);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(POSITIVE_INTEGER, -9);
			valueComparatorLookup.put(UNSIGNED_LONG, -14);
			valueComparatorLookup.put(UNSIGNED_INT, -14);
			valueComparatorLookup.put(UNSIGNED_SHORT, -14);
			valueComparatorLookup.put(UNSIGNED_BYTE, -14);
			valueComparatorLookup.put(YEARMONTHDURATION, -18);
		} else if (this == GMONTH) {
			valueComparatorLookup.put(DURATION, 3);
			valueComparatorLookup.put(DATETIME, 3);
			valueComparatorLookup.put(DATETIMESTAMP, 3);
			valueComparatorLookup.put(DAYTIMEDURATION, 3);
			valueComparatorLookup.put(TIME, -13);
			valueComparatorLookup.put(DATE, 3);
			valueComparatorLookup.put(GYEARMONTH, -12);
			valueComparatorLookup.put(GYEAR, -12);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, 9);
			valueComparatorLookup.put(GMONTH, 0);
			valueComparatorLookup.put(STRING, -12);
			valueComparatorLookup.put(BOOLEAN, 5);
			valueComparatorLookup.put(BASE64BINARY, 5);
			valueComparatorLookup.put(HEXBINARY, -1);
			valueComparatorLookup.put(FLOAT, 1);
			valueComparatorLookup.put(DECIMAL, 3);
			valueComparatorLookup.put(DOUBLE, 3);
			valueComparatorLookup.put(ANYURI, 6);
			valueComparatorLookup.put(QNAME, 22);
			valueComparatorLookup.put(NOTATION, 25);
			valueComparatorLookup.put(NORMALIZEDSTRING, -7);
			valueComparatorLookup.put(TOKEN, -13);
			valueComparatorLookup.put(LANGUAGE, -5);
			valueComparatorLookup.put(NMTOKEN, 25);
			valueComparatorLookup.put(NMTOKENS, 25);
			valueComparatorLookup.put(NAME, 25);
			valueComparatorLookup.put(NCNAME, 25);
			valueComparatorLookup.put(ID, 30);
			valueComparatorLookup.put(IDREF, 30);
			valueComparatorLookup.put(IDREFS, 30);
			valueComparatorLookup.put(ENTITY, 34);
			valueComparatorLookup.put(ENTITIES, 34);
			valueComparatorLookup.put(INTEGER, -2);
			valueComparatorLookup.put(LONG, -5);
			valueComparatorLookup.put(INT, -2);
			valueComparatorLookup.put(SHORT, -12);
			valueComparatorLookup.put(BYTE, 5);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -7);
			valueComparatorLookup.put(POSITIVE_INTEGER, -9);
			valueComparatorLookup.put(UNSIGNED_LONG, -14);
			valueComparatorLookup.put(UNSIGNED_INT, -14);
			valueComparatorLookup.put(UNSIGNED_SHORT, -14);
			valueComparatorLookup.put(UNSIGNED_BYTE, -14);
			valueComparatorLookup.put(YEARMONTHDURATION, -18);
		} else if (this == STRING) {
			valueComparatorLookup.put(DURATION, 15);
			valueComparatorLookup.put(DATETIME, 15);
			valueComparatorLookup.put(DATETIMESTAMP, 15);
			valueComparatorLookup.put(DAYTIMEDURATION, 15);
			valueComparatorLookup.put(TIME, -1);
			valueComparatorLookup.put(DATE, 15);
			valueComparatorLookup.put(GYEARMONTH, 12);
			valueComparatorLookup.put(GYEAR, 12);
			valueComparatorLookup.put(GMONTHDAY, 12);
			valueComparatorLookup.put(GDAY, 12);
			valueComparatorLookup.put(GMONTH, 12);
			valueComparatorLookup.put(STRING, 0);
			valueComparatorLookup.put(BOOLEAN, 17);
			valueComparatorLookup.put(BASE64BINARY, 17);
			valueComparatorLookup.put(HEXBINARY, 11);
			valueComparatorLookup.put(FLOAT, 13);
			valueComparatorLookup.put(DECIMAL, 15);
			valueComparatorLookup.put(DOUBLE, 15);
			valueComparatorLookup.put(ANYURI, 18);
			valueComparatorLookup.put(QNAME, 34);
			valueComparatorLookup.put(NOTATION, 37);
			valueComparatorLookup.put(NORMALIZEDSTRING, 5);
			valueComparatorLookup.put(TOKEN, -1);
			valueComparatorLookup.put(LANGUAGE, 7);
			valueComparatorLookup.put(NMTOKEN, 37);
			valueComparatorLookup.put(NMTOKENS, 37);
			valueComparatorLookup.put(NAME, 37);
			valueComparatorLookup.put(NCNAME, 37);
			valueComparatorLookup.put(ID, 42);
			valueComparatorLookup.put(IDREF, 42);
			valueComparatorLookup.put(IDREFS, 42);
			valueComparatorLookup.put(ENTITY, 46);
			valueComparatorLookup.put(ENTITIES, 46);
			valueComparatorLookup.put(INTEGER, 10);
			valueComparatorLookup.put(LONG, 7);
			valueComparatorLookup.put(INT, 10);
			valueComparatorLookup.put(SHORT, 12);
			valueComparatorLookup.put(BYTE, 17);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 5);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 5);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 5);
			valueComparatorLookup.put(POSITIVE_INTEGER, 3);
			valueComparatorLookup.put(UNSIGNED_LONG, -2);
			valueComparatorLookup.put(UNSIGNED_INT, -2);
			valueComparatorLookup.put(UNSIGNED_SHORT, -2);
			valueComparatorLookup.put(UNSIGNED_BYTE, -2);
			valueComparatorLookup.put(YEARMONTHDURATION, -6);
		} else if (this == BOOLEAN) {
			valueComparatorLookup.put(DURATION, -2);
			valueComparatorLookup.put(DATETIME, -2);
			valueComparatorLookup.put(DATETIMESTAMP, -2);
			valueComparatorLookup.put(DAYTIMEDURATION, -2);
			valueComparatorLookup.put(TIME, -18);
			valueComparatorLookup.put(DATE, -2);
			valueComparatorLookup.put(GYEARMONTH, -5);
			valueComparatorLookup.put(GYEAR, -5);
			valueComparatorLookup.put(GMONTHDAY, -5);
			valueComparatorLookup.put(GDAY, -5);
			valueComparatorLookup.put(GMONTH, -5);
			valueComparatorLookup.put(STRING, -17);
			valueComparatorLookup.put(BOOLEAN, 0);
			valueComparatorLookup.put(BASE64BINARY, 14);
			valueComparatorLookup.put(HEXBINARY, -6);
			valueComparatorLookup.put(FLOAT, -4);
			valueComparatorLookup.put(DECIMAL, -2);
			valueComparatorLookup.put(DOUBLE, -2);
			valueComparatorLookup.put(ANYURI, 1);
			valueComparatorLookup.put(QNAME, 17);
			valueComparatorLookup.put(NOTATION, 20);
			valueComparatorLookup.put(NORMALIZEDSTRING, -12);
			valueComparatorLookup.put(TOKEN, -18);
			valueComparatorLookup.put(LANGUAGE, -10);
			valueComparatorLookup.put(NMTOKEN, 20);
			valueComparatorLookup.put(NMTOKENS, 20);
			valueComparatorLookup.put(NAME, 20);
			valueComparatorLookup.put(NCNAME, 20);
			valueComparatorLookup.put(ID, 25);
			valueComparatorLookup.put(IDREF, 25);
			valueComparatorLookup.put(IDREFS, 25);
			valueComparatorLookup.put(ENTITY, 29);
			valueComparatorLookup.put(ENTITIES, 29);
			valueComparatorLookup.put(INTEGER, -7);
			valueComparatorLookup.put(LONG, -10);
			valueComparatorLookup.put(INT, -7);
			valueComparatorLookup.put(SHORT, -17);
			valueComparatorLookup.put(BYTE, -10);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -12);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -12);
			valueComparatorLookup.put(POSITIVE_INTEGER, -14);
			valueComparatorLookup.put(UNSIGNED_LONG, -19);
			valueComparatorLookup.put(UNSIGNED_INT, -19);
			valueComparatorLookup.put(UNSIGNED_SHORT, -19);
			valueComparatorLookup.put(UNSIGNED_BYTE, -19);
			valueComparatorLookup.put(YEARMONTHDURATION, -23);
		} else if (this == BASE64BINARY) {
			valueComparatorLookup.put(DURATION, -2);
			valueComparatorLookup.put(DATETIME, -2);
			valueComparatorLookup.put(DATETIMESTAMP, -2);
			valueComparatorLookup.put(DAYTIMEDURATION, -2);
			valueComparatorLookup.put(TIME, -18);
			valueComparatorLookup.put(DATE, -2);
			valueComparatorLookup.put(GYEARMONTH, -5);
			valueComparatorLookup.put(GYEAR, -5);
			valueComparatorLookup.put(GMONTHDAY, -5);
			valueComparatorLookup.put(GDAY, -5);
			valueComparatorLookup.put(GMONTH, -5);
			valueComparatorLookup.put(STRING, -17);
			valueComparatorLookup.put(BOOLEAN, -14);
			valueComparatorLookup.put(BASE64BINARY, 0);
			valueComparatorLookup.put(HEXBINARY, -6);
			valueComparatorLookup.put(FLOAT, -4);
			valueComparatorLookup.put(DECIMAL, -2);
			valueComparatorLookup.put(DOUBLE, -2);
			valueComparatorLookup.put(ANYURI, 1);
			valueComparatorLookup.put(QNAME, 17);
			valueComparatorLookup.put(NOTATION, 20);
			valueComparatorLookup.put(NORMALIZEDSTRING, -12);
			valueComparatorLookup.put(TOKEN, -18);
			valueComparatorLookup.put(LANGUAGE, -10);
			valueComparatorLookup.put(NMTOKEN, 20);
			valueComparatorLookup.put(NMTOKENS, 20);
			valueComparatorLookup.put(NAME, 20);
			valueComparatorLookup.put(NCNAME, 20);
			valueComparatorLookup.put(ID, 25);
			valueComparatorLookup.put(IDREF, 25);
			valueComparatorLookup.put(IDREFS, 25);
			valueComparatorLookup.put(ENTITY, 29);
			valueComparatorLookup.put(ENTITIES, 29);
			valueComparatorLookup.put(INTEGER, -7);
			valueComparatorLookup.put(LONG, -10);
			valueComparatorLookup.put(INT, -7);
			valueComparatorLookup.put(SHORT, -17);
			valueComparatorLookup.put(BYTE, -24);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -12);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -12);
			valueComparatorLookup.put(POSITIVE_INTEGER, -14);
			valueComparatorLookup.put(UNSIGNED_LONG, -19);
			valueComparatorLookup.put(UNSIGNED_INT, -19);
			valueComparatorLookup.put(UNSIGNED_SHORT, -19);
			valueComparatorLookup.put(UNSIGNED_BYTE, -19);
			valueComparatorLookup.put(YEARMONTHDURATION, -23);
		} else if (this == HEXBINARY) {
			valueComparatorLookup.put(DURATION, 4);
			valueComparatorLookup.put(DATETIME, 4);
			valueComparatorLookup.put(DATETIMESTAMP, 4);
			valueComparatorLookup.put(DAYTIMEDURATION, 4);
			valueComparatorLookup.put(TIME, -12);
			valueComparatorLookup.put(DATE, 4);
			valueComparatorLookup.put(GYEARMONTH, 1);
			valueComparatorLookup.put(GYEAR, 1);
			valueComparatorLookup.put(GMONTHDAY, 1);
			valueComparatorLookup.put(GDAY, 1);
			valueComparatorLookup.put(GMONTH, 1);
			valueComparatorLookup.put(STRING, -11);
			valueComparatorLookup.put(BOOLEAN, 6);
			valueComparatorLookup.put(BASE64BINARY, 6);
			valueComparatorLookup.put(HEXBINARY, 0);
			valueComparatorLookup.put(FLOAT, 2);
			valueComparatorLookup.put(DECIMAL, 4);
			valueComparatorLookup.put(DOUBLE, 4);
			valueComparatorLookup.put(ANYURI, 7);
			valueComparatorLookup.put(QNAME, 23);
			valueComparatorLookup.put(NOTATION, 26);
			valueComparatorLookup.put(NORMALIZEDSTRING, -6);
			valueComparatorLookup.put(TOKEN, -12);
			valueComparatorLookup.put(LANGUAGE, -4);
			valueComparatorLookup.put(NMTOKEN, 26);
			valueComparatorLookup.put(NMTOKENS, 26);
			valueComparatorLookup.put(NAME, 26);
			valueComparatorLookup.put(NCNAME, 26);
			valueComparatorLookup.put(ID, 31);
			valueComparatorLookup.put(IDREF, 31);
			valueComparatorLookup.put(IDREFS, 31);
			valueComparatorLookup.put(ENTITY, 35);
			valueComparatorLookup.put(ENTITIES, 35);
			valueComparatorLookup.put(INTEGER, -1);
			valueComparatorLookup.put(LONG, -4);
			valueComparatorLookup.put(INT, -1);
			valueComparatorLookup.put(SHORT, -11);
			valueComparatorLookup.put(BYTE, 6);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -6);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -6);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -6);
			valueComparatorLookup.put(POSITIVE_INTEGER, -8);
			valueComparatorLookup.put(UNSIGNED_LONG, -13);
			valueComparatorLookup.put(UNSIGNED_INT, -13);
			valueComparatorLookup.put(UNSIGNED_SHORT, -13);
			valueComparatorLookup.put(UNSIGNED_BYTE, -13);
			valueComparatorLookup.put(YEARMONTHDURATION, -17);
		} else if (this == FLOAT) {
			valueComparatorLookup.put(DURATION, 2);
			valueComparatorLookup.put(DATETIME, 2);
			valueComparatorLookup.put(DATETIMESTAMP, 2);
			valueComparatorLookup.put(DAYTIMEDURATION, 2);
			valueComparatorLookup.put(TIME, -14);
			valueComparatorLookup.put(DATE, 2);
			valueComparatorLookup.put(GYEARMONTH, -1);
			valueComparatorLookup.put(GYEAR, -1);
			valueComparatorLookup.put(GMONTHDAY, -1);
			valueComparatorLookup.put(GDAY, -1);
			valueComparatorLookup.put(GMONTH, -1);
			valueComparatorLookup.put(STRING, -13);
			valueComparatorLookup.put(BOOLEAN, 4);
			valueComparatorLookup.put(BASE64BINARY, 4);
			valueComparatorLookup.put(HEXBINARY, -2);
			valueComparatorLookup.put(FLOAT, 0);
			valueComparatorLookup.put(DECIMAL, 2);
			valueComparatorLookup.put(DOUBLE, 2);
			valueComparatorLookup.put(ANYURI, 5);
			valueComparatorLookup.put(QNAME, 21);
			valueComparatorLookup.put(NOTATION, 24);
			valueComparatorLookup.put(NORMALIZEDSTRING, -8);
			valueComparatorLookup.put(TOKEN, -14);
			valueComparatorLookup.put(LANGUAGE, -6);
			valueComparatorLookup.put(NMTOKEN, 24);
			valueComparatorLookup.put(NMTOKENS, 24);
			valueComparatorLookup.put(NAME, 24);
			valueComparatorLookup.put(NCNAME, 24);
			valueComparatorLookup.put(ID, 29);
			valueComparatorLookup.put(IDREF, 29);
			valueComparatorLookup.put(IDREFS, 29);
			valueComparatorLookup.put(ENTITY, 33);
			valueComparatorLookup.put(ENTITIES, 33);
			valueComparatorLookup.put(INTEGER, -3);
			valueComparatorLookup.put(LONG, -6);
			valueComparatorLookup.put(INT, -3);
			valueComparatorLookup.put(SHORT, -13);
			valueComparatorLookup.put(BYTE, 4);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -8);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -8);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -8);
			valueComparatorLookup.put(POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(UNSIGNED_LONG, -15);
			valueComparatorLookup.put(UNSIGNED_INT, -15);
			valueComparatorLookup.put(UNSIGNED_SHORT, -15);
			valueComparatorLookup.put(UNSIGNED_BYTE, -15);
			valueComparatorLookup.put(YEARMONTHDURATION, -19);
		} else if (this == DECIMAL) {
			valueComparatorLookup.put(DURATION, -16);
			valueComparatorLookup.put(DATETIME, 4);
			valueComparatorLookup.put(DATETIMESTAMP, 4);
			valueComparatorLookup.put(DAYTIMEDURATION, 4);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 4);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, 0);
			valueComparatorLookup.put(DOUBLE, -10);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == DOUBLE) {
			valueComparatorLookup.put(DURATION, -6);
			valueComparatorLookup.put(DATETIME, 14);
			valueComparatorLookup.put(DATETIMESTAMP, 14);
			valueComparatorLookup.put(DAYTIMEDURATION, 14);
			valueComparatorLookup.put(TIME, -16);
			valueComparatorLookup.put(DATE, 14);
			valueComparatorLookup.put(GYEARMONTH, -3);
			valueComparatorLookup.put(GYEAR, -3);
			valueComparatorLookup.put(GMONTHDAY, -3);
			valueComparatorLookup.put(GDAY, -3);
			valueComparatorLookup.put(GMONTH, -3);
			valueComparatorLookup.put(STRING, -15);
			valueComparatorLookup.put(BOOLEAN, 2);
			valueComparatorLookup.put(BASE64BINARY, 2);
			valueComparatorLookup.put(HEXBINARY, -4);
			valueComparatorLookup.put(FLOAT, -2);
			valueComparatorLookup.put(DECIMAL, 10);
			valueComparatorLookup.put(DOUBLE, 0);
			valueComparatorLookup.put(ANYURI, 3);
			valueComparatorLookup.put(QNAME, 19);
			valueComparatorLookup.put(NOTATION, 22);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -16);
			valueComparatorLookup.put(LANGUAGE, -8);
			valueComparatorLookup.put(NMTOKEN, 22);
			valueComparatorLookup.put(NMTOKENS, 22);
			valueComparatorLookup.put(NAME, 22);
			valueComparatorLookup.put(NCNAME, 22);
			valueComparatorLookup.put(ID, 27);
			valueComparatorLookup.put(IDREF, 27);
			valueComparatorLookup.put(IDREFS, 27);
			valueComparatorLookup.put(ENTITY, 31);
			valueComparatorLookup.put(ENTITIES, 31);
			valueComparatorLookup.put(INTEGER, -5);
			valueComparatorLookup.put(LONG, -8);
			valueComparatorLookup.put(INT, -5);
			valueComparatorLookup.put(SHORT, -15);
			valueComparatorLookup.put(BYTE, 2);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(UNSIGNED_LONG, -17);
			valueComparatorLookup.put(UNSIGNED_INT, -17);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, -17);
			valueComparatorLookup.put(YEARMONTHDURATION, -21);
		} else if (this == ANYURI) {
			valueComparatorLookup.put(DURATION, -3);
			valueComparatorLookup.put(DATETIME, -3);
			valueComparatorLookup.put(DATETIMESTAMP, -3);
			valueComparatorLookup.put(DAYTIMEDURATION, -3);
			valueComparatorLookup.put(TIME, -19);
			valueComparatorLookup.put(DATE, -3);
			valueComparatorLookup.put(GYEARMONTH, -6);
			valueComparatorLookup.put(GYEAR, -6);
			valueComparatorLookup.put(GMONTHDAY, -6);
			valueComparatorLookup.put(GDAY, -6);
			valueComparatorLookup.put(GMONTH, -6);
			valueComparatorLookup.put(STRING, -18);
			valueComparatorLookup.put(BOOLEAN, -1);
			valueComparatorLookup.put(BASE64BINARY, -1);
			valueComparatorLookup.put(HEXBINARY, -7);
			valueComparatorLookup.put(FLOAT, -5);
			valueComparatorLookup.put(DECIMAL, -3);
			valueComparatorLookup.put(DOUBLE, -3);
			valueComparatorLookup.put(ANYURI, 0);
			valueComparatorLookup.put(QNAME, 16);
			valueComparatorLookup.put(NOTATION, 19);
			valueComparatorLookup.put(NORMALIZEDSTRING, -13);
			valueComparatorLookup.put(TOKEN, -19);
			valueComparatorLookup.put(LANGUAGE, -11);
			valueComparatorLookup.put(NMTOKEN, 19);
			valueComparatorLookup.put(NMTOKENS, 19);
			valueComparatorLookup.put(NAME, 19);
			valueComparatorLookup.put(NCNAME, 19);
			valueComparatorLookup.put(ID, 24);
			valueComparatorLookup.put(IDREF, 24);
			valueComparatorLookup.put(IDREFS, 24);
			valueComparatorLookup.put(ENTITY, 28);
			valueComparatorLookup.put(ENTITIES, 28);
			valueComparatorLookup.put(INTEGER, -8);
			valueComparatorLookup.put(LONG, -11);
			valueComparatorLookup.put(INT, -8);
			valueComparatorLookup.put(SHORT, -18);
			valueComparatorLookup.put(BYTE, -1);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -13);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -13);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -13);
			valueComparatorLookup.put(POSITIVE_INTEGER, -15);
			valueComparatorLookup.put(UNSIGNED_LONG, -20);
			valueComparatorLookup.put(UNSIGNED_INT, -20);
			valueComparatorLookup.put(UNSIGNED_SHORT, -20);
			valueComparatorLookup.put(UNSIGNED_BYTE, -20);
			valueComparatorLookup.put(YEARMONTHDURATION, -24);
		} else if (this == QNAME) {
			valueComparatorLookup.put(DURATION, -19);
			valueComparatorLookup.put(DATETIME, -19);
			valueComparatorLookup.put(DATETIMESTAMP, -19);
			valueComparatorLookup.put(DAYTIMEDURATION, -19);
			valueComparatorLookup.put(TIME, -35);
			valueComparatorLookup.put(DATE, -19);
			valueComparatorLookup.put(GYEARMONTH, -22);
			valueComparatorLookup.put(GYEAR, -22);
			valueComparatorLookup.put(GMONTHDAY, -22);
			valueComparatorLookup.put(GDAY, -22);
			valueComparatorLookup.put(GMONTH, -22);
			valueComparatorLookup.put(STRING, -34);
			valueComparatorLookup.put(BOOLEAN, -17);
			valueComparatorLookup.put(BASE64BINARY, -17);
			valueComparatorLookup.put(HEXBINARY, -23);
			valueComparatorLookup.put(FLOAT, -21);
			valueComparatorLookup.put(DECIMAL, -19);
			valueComparatorLookup.put(DOUBLE, -19);
			valueComparatorLookup.put(ANYURI, -16);
			valueComparatorLookup.put(QNAME, 0);
			valueComparatorLookup.put(NOTATION, 3);
			valueComparatorLookup.put(NORMALIZEDSTRING, -29);
			valueComparatorLookup.put(TOKEN, -35);
			valueComparatorLookup.put(LANGUAGE, -27);
			valueComparatorLookup.put(NMTOKEN, 3);
			valueComparatorLookup.put(NMTOKENS, 3);
			valueComparatorLookup.put(NAME, 3);
			valueComparatorLookup.put(NCNAME, 3);
			valueComparatorLookup.put(ID, 8);
			valueComparatorLookup.put(IDREF, 8);
			valueComparatorLookup.put(IDREFS, 8);
			valueComparatorLookup.put(ENTITY, 12);
			valueComparatorLookup.put(ENTITIES, 12);
			valueComparatorLookup.put(INTEGER, -24);
			valueComparatorLookup.put(LONG, -27);
			valueComparatorLookup.put(INT, -24);
			valueComparatorLookup.put(SHORT, -34);
			valueComparatorLookup.put(BYTE, -17);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -29);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -29);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -29);
			valueComparatorLookup.put(POSITIVE_INTEGER, -31);
			valueComparatorLookup.put(UNSIGNED_LONG, -36);
			valueComparatorLookup.put(UNSIGNED_INT, -36);
			valueComparatorLookup.put(UNSIGNED_SHORT, -36);
			valueComparatorLookup.put(UNSIGNED_BYTE, -36);
			valueComparatorLookup.put(YEARMONTHDURATION, -40);
		} else if (this == NOTATION) {
			valueComparatorLookup.put(DURATION, -22);
			valueComparatorLookup.put(DATETIME, -22);
			valueComparatorLookup.put(DATETIMESTAMP, -22);
			valueComparatorLookup.put(DAYTIMEDURATION, -22);
			valueComparatorLookup.put(TIME, -38);
			valueComparatorLookup.put(DATE, -22);
			valueComparatorLookup.put(GYEARMONTH, -25);
			valueComparatorLookup.put(GYEAR, -25);
			valueComparatorLookup.put(GMONTHDAY, -25);
			valueComparatorLookup.put(GDAY, -25);
			valueComparatorLookup.put(GMONTH, -25);
			valueComparatorLookup.put(STRING, -37);
			valueComparatorLookup.put(BOOLEAN, -20);
			valueComparatorLookup.put(BASE64BINARY, -20);
			valueComparatorLookup.put(HEXBINARY, -26);
			valueComparatorLookup.put(FLOAT, -24);
			valueComparatorLookup.put(DECIMAL, -22);
			valueComparatorLookup.put(DOUBLE, -22);
			valueComparatorLookup.put(ANYURI, -19);
			valueComparatorLookup.put(QNAME, -3);
			valueComparatorLookup.put(NOTATION, 0);
			valueComparatorLookup.put(NORMALIZEDSTRING, -32);
			valueComparatorLookup.put(TOKEN, -38);
			valueComparatorLookup.put(LANGUAGE, -30);
			valueComparatorLookup.put(NMTOKEN, 2);
			valueComparatorLookup.put(NMTOKENS, 2);
			valueComparatorLookup.put(NAME, -18);
			valueComparatorLookup.put(NCNAME, 12);
			valueComparatorLookup.put(ID, 5);
			valueComparatorLookup.put(IDREF, 5);
			valueComparatorLookup.put(IDREFS, 5);
			valueComparatorLookup.put(ENTITY, 9);
			valueComparatorLookup.put(ENTITIES, 9);
			valueComparatorLookup.put(INTEGER, -27);
			valueComparatorLookup.put(LONG, -30);
			valueComparatorLookup.put(INT, -27);
			valueComparatorLookup.put(SHORT, -37);
			valueComparatorLookup.put(BYTE, -20);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -32);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(POSITIVE_INTEGER, -34);
			valueComparatorLookup.put(UNSIGNED_LONG, -39);
			valueComparatorLookup.put(UNSIGNED_INT, -39);
			valueComparatorLookup.put(UNSIGNED_SHORT, -39);
			valueComparatorLookup.put(UNSIGNED_BYTE, -39);
			valueComparatorLookup.put(YEARMONTHDURATION, -43);
		} else if (this == NORMALIZEDSTRING) {
			valueComparatorLookup.put(DURATION, 10);
			valueComparatorLookup.put(DATETIME, 10);
			valueComparatorLookup.put(DATETIMESTAMP, 10);
			valueComparatorLookup.put(DAYTIMEDURATION, 10);
			valueComparatorLookup.put(TIME, -6);
			valueComparatorLookup.put(DATE, 10);
			valueComparatorLookup.put(GYEARMONTH, 7);
			valueComparatorLookup.put(GYEAR, 7);
			valueComparatorLookup.put(GMONTHDAY, 7);
			valueComparatorLookup.put(GDAY, 7);
			valueComparatorLookup.put(GMONTH, 7);
			valueComparatorLookup.put(STRING, -5);
			valueComparatorLookup.put(BOOLEAN, 12);
			valueComparatorLookup.put(BASE64BINARY, 12);
			valueComparatorLookup.put(HEXBINARY, 6);
			valueComparatorLookup.put(FLOAT, 8);
			valueComparatorLookup.put(DECIMAL, 10);
			valueComparatorLookup.put(DOUBLE, 10);
			valueComparatorLookup.put(ANYURI, 13);
			valueComparatorLookup.put(QNAME, 29);
			valueComparatorLookup.put(NOTATION, 32);
			valueComparatorLookup.put(NORMALIZEDSTRING, 0);
			valueComparatorLookup.put(TOKEN, -6);
			valueComparatorLookup.put(LANGUAGE, 2);
			valueComparatorLookup.put(NMTOKEN, 32);
			valueComparatorLookup.put(NMTOKENS, 32);
			valueComparatorLookup.put(NAME, 32);
			valueComparatorLookup.put(NCNAME, 32);
			valueComparatorLookup.put(ID, 37);
			valueComparatorLookup.put(IDREF, 37);
			valueComparatorLookup.put(IDREFS, 37);
			valueComparatorLookup.put(ENTITY, 41);
			valueComparatorLookup.put(ENTITIES, 41);
			valueComparatorLookup.put(INTEGER, 5);
			valueComparatorLookup.put(LONG, 2);
			valueComparatorLookup.put(INT, 5);
			valueComparatorLookup.put(SHORT, -5);
			valueComparatorLookup.put(BYTE, 12);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 4);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 4);
			valueComparatorLookup.put(POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(UNSIGNED_LONG, -7);
			valueComparatorLookup.put(UNSIGNED_INT, -7);
			valueComparatorLookup.put(UNSIGNED_SHORT, -7);
			valueComparatorLookup.put(UNSIGNED_BYTE, -7);
			valueComparatorLookup.put(YEARMONTHDURATION, -11);
		} else if (this == TOKEN) {
			valueComparatorLookup.put(DURATION, 16);
			valueComparatorLookup.put(DATETIME, 16);
			valueComparatorLookup.put(DATETIMESTAMP, 16);
			valueComparatorLookup.put(DAYTIMEDURATION, 16);
			valueComparatorLookup.put(TIME, 6);
			valueComparatorLookup.put(DATE, 16);
			valueComparatorLookup.put(GYEARMONTH, 13);
			valueComparatorLookup.put(GYEAR, 13);
			valueComparatorLookup.put(GMONTHDAY, 13);
			valueComparatorLookup.put(GDAY, 13);
			valueComparatorLookup.put(GMONTH, 13);
			valueComparatorLookup.put(STRING, 1);
			valueComparatorLookup.put(BOOLEAN, 18);
			valueComparatorLookup.put(BASE64BINARY, 18);
			valueComparatorLookup.put(HEXBINARY, 12);
			valueComparatorLookup.put(FLOAT, 14);
			valueComparatorLookup.put(DECIMAL, 16);
			valueComparatorLookup.put(DOUBLE, 16);
			valueComparatorLookup.put(ANYURI, 19);
			valueComparatorLookup.put(QNAME, 35);
			valueComparatorLookup.put(NOTATION, 38);
			valueComparatorLookup.put(NORMALIZEDSTRING, 6);
			valueComparatorLookup.put(TOKEN, 0);
			valueComparatorLookup.put(LANGUAGE, 8);
			valueComparatorLookup.put(NMTOKEN, 38);
			valueComparatorLookup.put(NMTOKENS, 38);
			valueComparatorLookup.put(NAME, 38);
			valueComparatorLookup.put(NCNAME, 38);
			valueComparatorLookup.put(ID, 43);
			valueComparatorLookup.put(IDREF, 43);
			valueComparatorLookup.put(IDREFS, 43);
			valueComparatorLookup.put(ENTITY, 47);
			valueComparatorLookup.put(ENTITIES, 47);
			valueComparatorLookup.put(INTEGER, 11);
			valueComparatorLookup.put(LONG, 8);
			valueComparatorLookup.put(INT, 11);
			valueComparatorLookup.put(SHORT, 1);
			valueComparatorLookup.put(BYTE, 18);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 6);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 6);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 6);
			valueComparatorLookup.put(POSITIVE_INTEGER, 4);
			valueComparatorLookup.put(UNSIGNED_LONG, -1);
			valueComparatorLookup.put(UNSIGNED_INT, -1);
			valueComparatorLookup.put(UNSIGNED_SHORT, -1);
			valueComparatorLookup.put(UNSIGNED_BYTE, -1);
			valueComparatorLookup.put(YEARMONTHDURATION, -5);
		} else if (this == LANGUAGE) {
			valueComparatorLookup.put(DURATION, 8);
			valueComparatorLookup.put(DATETIME, 8);
			valueComparatorLookup.put(DATETIMESTAMP, 8);
			valueComparatorLookup.put(DAYTIMEDURATION, 8);
			valueComparatorLookup.put(TIME, -8);
			valueComparatorLookup.put(DATE, 8);
			valueComparatorLookup.put(GYEARMONTH, 5);
			valueComparatorLookup.put(GYEAR, 5);
			valueComparatorLookup.put(GMONTHDAY, 5);
			valueComparatorLookup.put(GDAY, 5);
			valueComparatorLookup.put(GMONTH, 5);
			valueComparatorLookup.put(STRING, -7);
			valueComparatorLookup.put(BOOLEAN, 10);
			valueComparatorLookup.put(BASE64BINARY, 10);
			valueComparatorLookup.put(HEXBINARY, 4);
			valueComparatorLookup.put(FLOAT, 6);
			valueComparatorLookup.put(DECIMAL, 8);
			valueComparatorLookup.put(DOUBLE, 8);
			valueComparatorLookup.put(ANYURI, 11);
			valueComparatorLookup.put(QNAME, 27);
			valueComparatorLookup.put(NOTATION, 30);
			valueComparatorLookup.put(NORMALIZEDSTRING, -2);
			valueComparatorLookup.put(TOKEN, -8);
			valueComparatorLookup.put(LANGUAGE, 0);
			valueComparatorLookup.put(NMTOKEN, 30);
			valueComparatorLookup.put(NMTOKENS, 30);
			valueComparatorLookup.put(NAME, 30);
			valueComparatorLookup.put(NCNAME, 30);
			valueComparatorLookup.put(ID, 35);
			valueComparatorLookup.put(IDREF, 35);
			valueComparatorLookup.put(IDREFS, 35);
			valueComparatorLookup.put(ENTITY, 39);
			valueComparatorLookup.put(ENTITIES, 39);
			valueComparatorLookup.put(INTEGER, 3);
			valueComparatorLookup.put(LONG, -14);
			valueComparatorLookup.put(INT, 3);
			valueComparatorLookup.put(SHORT, -7);
			valueComparatorLookup.put(BYTE, 10);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -2);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -2);
			valueComparatorLookup.put(POSITIVE_INTEGER, -4);
			valueComparatorLookup.put(UNSIGNED_LONG, -9);
			valueComparatorLookup.put(UNSIGNED_INT, -9);
			valueComparatorLookup.put(UNSIGNED_SHORT, -9);
			valueComparatorLookup.put(UNSIGNED_BYTE, -9);
			valueComparatorLookup.put(YEARMONTHDURATION, -13);
		} else if (this == NMTOKEN) {
			valueComparatorLookup.put(DURATION, -22);
			valueComparatorLookup.put(DATETIME, -22);
			valueComparatorLookup.put(DATETIMESTAMP, -22);
			valueComparatorLookup.put(DAYTIMEDURATION, -22);
			valueComparatorLookup.put(TIME, -38);
			valueComparatorLookup.put(DATE, -22);
			valueComparatorLookup.put(GYEARMONTH, -25);
			valueComparatorLookup.put(GYEAR, -25);
			valueComparatorLookup.put(GMONTHDAY, -25);
			valueComparatorLookup.put(GDAY, -25);
			valueComparatorLookup.put(GMONTH, -25);
			valueComparatorLookup.put(STRING, -37);
			valueComparatorLookup.put(BOOLEAN, -20);
			valueComparatorLookup.put(BASE64BINARY, -20);
			valueComparatorLookup.put(HEXBINARY, -26);
			valueComparatorLookup.put(FLOAT, -24);
			valueComparatorLookup.put(DECIMAL, -22);
			valueComparatorLookup.put(DOUBLE, -22);
			valueComparatorLookup.put(ANYURI, -19);
			valueComparatorLookup.put(QNAME, -3);
			valueComparatorLookup.put(NOTATION, -2);
			valueComparatorLookup.put(NORMALIZEDSTRING, -32);
			valueComparatorLookup.put(TOKEN, -38);
			valueComparatorLookup.put(LANGUAGE, -30);
			valueComparatorLookup.put(NMTOKEN, 0);
			valueComparatorLookup.put(NMTOKENS, -1);
			valueComparatorLookup.put(NAME, -20);
			valueComparatorLookup.put(NCNAME, 10);
			valueComparatorLookup.put(ID, 5);
			valueComparatorLookup.put(IDREF, 5);
			valueComparatorLookup.put(IDREFS, 5);
			valueComparatorLookup.put(ENTITY, 9);
			valueComparatorLookup.put(ENTITIES, 9);
			valueComparatorLookup.put(INTEGER, -27);
			valueComparatorLookup.put(LONG, -30);
			valueComparatorLookup.put(INT, -27);
			valueComparatorLookup.put(SHORT, -37);
			valueComparatorLookup.put(BYTE, -20);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -32);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(POSITIVE_INTEGER, -34);
			valueComparatorLookup.put(UNSIGNED_LONG, -39);
			valueComparatorLookup.put(UNSIGNED_INT, -39);
			valueComparatorLookup.put(UNSIGNED_SHORT, -39);
			valueComparatorLookup.put(UNSIGNED_BYTE, -39);
			valueComparatorLookup.put(YEARMONTHDURATION, -43);
		} else if (this == NMTOKENS) {
			valueComparatorLookup.put(DURATION, -22);
			valueComparatorLookup.put(DATETIME, -22);
			valueComparatorLookup.put(DATETIMESTAMP, -22);
			valueComparatorLookup.put(DAYTIMEDURATION, -22);
			valueComparatorLookup.put(TIME, -38);
			valueComparatorLookup.put(DATE, -22);
			valueComparatorLookup.put(GYEARMONTH, -25);
			valueComparatorLookup.put(GYEAR, -25);
			valueComparatorLookup.put(GMONTHDAY, -25);
			valueComparatorLookup.put(GDAY, -25);
			valueComparatorLookup.put(GMONTH, -25);
			valueComparatorLookup.put(STRING, -37);
			valueComparatorLookup.put(BOOLEAN, -20);
			valueComparatorLookup.put(BASE64BINARY, -20);
			valueComparatorLookup.put(HEXBINARY, -26);
			valueComparatorLookup.put(FLOAT, -24);
			valueComparatorLookup.put(DECIMAL, -22);
			valueComparatorLookup.put(DOUBLE, -22);
			valueComparatorLookup.put(ANYURI, -19);
			valueComparatorLookup.put(QNAME, -3);
			valueComparatorLookup.put(NOTATION, -2);
			valueComparatorLookup.put(NORMALIZEDSTRING, -32);
			valueComparatorLookup.put(TOKEN, -38);
			valueComparatorLookup.put(LANGUAGE, -30);
			valueComparatorLookup.put(NMTOKEN, 1);
			valueComparatorLookup.put(NMTOKENS, 0);
			valueComparatorLookup.put(NAME, -20);
			valueComparatorLookup.put(NCNAME, 10);
			valueComparatorLookup.put(ID, 5);
			valueComparatorLookup.put(IDREF, 5);
			valueComparatorLookup.put(IDREFS, 5);
			valueComparatorLookup.put(ENTITY, 9);
			valueComparatorLookup.put(ENTITIES, 9);
			valueComparatorLookup.put(INTEGER, -27);
			valueComparatorLookup.put(LONG, -30);
			valueComparatorLookup.put(INT, -27);
			valueComparatorLookup.put(SHORT, -37);
			valueComparatorLookup.put(BYTE, -20);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -32);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(POSITIVE_INTEGER, -34);
			valueComparatorLookup.put(UNSIGNED_LONG, -39);
			valueComparatorLookup.put(UNSIGNED_INT, -39);
			valueComparatorLookup.put(UNSIGNED_SHORT, -39);
			valueComparatorLookup.put(UNSIGNED_BYTE, -39);
			valueComparatorLookup.put(YEARMONTHDURATION, -43);
		} else if (this == NAME) {
			valueComparatorLookup.put(DURATION, -22);
			valueComparatorLookup.put(DATETIME, -22);
			valueComparatorLookup.put(DATETIMESTAMP, -22);
			valueComparatorLookup.put(DAYTIMEDURATION, -22);
			valueComparatorLookup.put(TIME, -38);
			valueComparatorLookup.put(DATE, -22);
			valueComparatorLookup.put(GYEARMONTH, -25);
			valueComparatorLookup.put(GYEAR, -25);
			valueComparatorLookup.put(GMONTHDAY, -25);
			valueComparatorLookup.put(GDAY, -25);
			valueComparatorLookup.put(GMONTH, -25);
			valueComparatorLookup.put(STRING, -37);
			valueComparatorLookup.put(BOOLEAN, -20);
			valueComparatorLookup.put(BASE64BINARY, -20);
			valueComparatorLookup.put(HEXBINARY, -26);
			valueComparatorLookup.put(FLOAT, -24);
			valueComparatorLookup.put(DECIMAL, -22);
			valueComparatorLookup.put(DOUBLE, -22);
			valueComparatorLookup.put(ANYURI, -19);
			valueComparatorLookup.put(QNAME, -3);
			valueComparatorLookup.put(NOTATION, 18);
			valueComparatorLookup.put(NORMALIZEDSTRING, -32);
			valueComparatorLookup.put(TOKEN, -38);
			valueComparatorLookup.put(LANGUAGE, -30);
			valueComparatorLookup.put(NMTOKEN, 20);
			valueComparatorLookup.put(NMTOKENS, 20);
			valueComparatorLookup.put(NAME, 0);
			valueComparatorLookup.put(NCNAME, 30);
			valueComparatorLookup.put(ID, 5);
			valueComparatorLookup.put(IDREF, 5);
			valueComparatorLookup.put(IDREFS, 5);
			valueComparatorLookup.put(ENTITY, 9);
			valueComparatorLookup.put(ENTITIES, 9);
			valueComparatorLookup.put(INTEGER, -27);
			valueComparatorLookup.put(LONG, -30);
			valueComparatorLookup.put(INT, -27);
			valueComparatorLookup.put(SHORT, -37);
			valueComparatorLookup.put(BYTE, -20);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -32);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(POSITIVE_INTEGER, -34);
			valueComparatorLookup.put(UNSIGNED_LONG, -39);
			valueComparatorLookup.put(UNSIGNED_INT, -39);
			valueComparatorLookup.put(UNSIGNED_SHORT, -39);
			valueComparatorLookup.put(UNSIGNED_BYTE, -39);
			valueComparatorLookup.put(YEARMONTHDURATION, -43);
		} else if (this == NCNAME) {
			valueComparatorLookup.put(DURATION, -22);
			valueComparatorLookup.put(DATETIME, -22);
			valueComparatorLookup.put(DATETIMESTAMP, -22);
			valueComparatorLookup.put(DAYTIMEDURATION, -22);
			valueComparatorLookup.put(TIME, -38);
			valueComparatorLookup.put(DATE, -22);
			valueComparatorLookup.put(GYEARMONTH, -25);
			valueComparatorLookup.put(GYEAR, -25);
			valueComparatorLookup.put(GMONTHDAY, -25);
			valueComparatorLookup.put(GDAY, -25);
			valueComparatorLookup.put(GMONTH, -25);
			valueComparatorLookup.put(STRING, -37);
			valueComparatorLookup.put(BOOLEAN, -20);
			valueComparatorLookup.put(BASE64BINARY, -20);
			valueComparatorLookup.put(HEXBINARY, -26);
			valueComparatorLookup.put(FLOAT, -24);
			valueComparatorLookup.put(DECIMAL, -22);
			valueComparatorLookup.put(DOUBLE, -22);
			valueComparatorLookup.put(ANYURI, -19);
			valueComparatorLookup.put(QNAME, -3);
			valueComparatorLookup.put(NOTATION, -12);
			valueComparatorLookup.put(NORMALIZEDSTRING, -32);
			valueComparatorLookup.put(TOKEN, -38);
			valueComparatorLookup.put(LANGUAGE, -30);
			valueComparatorLookup.put(NMTOKEN, -10);
			valueComparatorLookup.put(NMTOKENS, -10);
			valueComparatorLookup.put(NAME, -30);
			valueComparatorLookup.put(NCNAME, 0);
			valueComparatorLookup.put(ID, 5);
			valueComparatorLookup.put(IDREF, 5);
			valueComparatorLookup.put(IDREFS, 5);
			valueComparatorLookup.put(ENTITY, 9);
			valueComparatorLookup.put(ENTITIES, 9);
			valueComparatorLookup.put(INTEGER, -27);
			valueComparatorLookup.put(LONG, -30);
			valueComparatorLookup.put(INT, -27);
			valueComparatorLookup.put(SHORT, -37);
			valueComparatorLookup.put(BYTE, -20);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -32);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -32);
			valueComparatorLookup.put(POSITIVE_INTEGER, -34);
			valueComparatorLookup.put(UNSIGNED_LONG, -39);
			valueComparatorLookup.put(UNSIGNED_INT, -39);
			valueComparatorLookup.put(UNSIGNED_SHORT, -39);
			valueComparatorLookup.put(UNSIGNED_BYTE, -39);
			valueComparatorLookup.put(YEARMONTHDURATION, -43);
		} else if (this == ID) {
			valueComparatorLookup.put(DURATION, -27);
			valueComparatorLookup.put(DATETIME, -27);
			valueComparatorLookup.put(DATETIMESTAMP, -27);
			valueComparatorLookup.put(DAYTIMEDURATION, -27);
			valueComparatorLookup.put(TIME, -43);
			valueComparatorLookup.put(DATE, -27);
			valueComparatorLookup.put(GYEARMONTH, -30);
			valueComparatorLookup.put(GYEAR, -30);
			valueComparatorLookup.put(GMONTHDAY, -30);
			valueComparatorLookup.put(GDAY, -30);
			valueComparatorLookup.put(GMONTH, -30);
			valueComparatorLookup.put(STRING, -42);
			valueComparatorLookup.put(BOOLEAN, -25);
			valueComparatorLookup.put(BASE64BINARY, -25);
			valueComparatorLookup.put(HEXBINARY, -31);
			valueComparatorLookup.put(FLOAT, -29);
			valueComparatorLookup.put(DECIMAL, -27);
			valueComparatorLookup.put(DOUBLE, -27);
			valueComparatorLookup.put(ANYURI, -24);
			valueComparatorLookup.put(QNAME, -8);
			valueComparatorLookup.put(NOTATION, -5);
			valueComparatorLookup.put(NORMALIZEDSTRING, -37);
			valueComparatorLookup.put(TOKEN, -43);
			valueComparatorLookup.put(LANGUAGE, -35);
			valueComparatorLookup.put(NMTOKEN, -5);
			valueComparatorLookup.put(NMTOKENS, -5);
			valueComparatorLookup.put(NAME, -5);
			valueComparatorLookup.put(NCNAME, -5);
			valueComparatorLookup.put(ID, 0);
			valueComparatorLookup.put(IDREF, -3);
			valueComparatorLookup.put(IDREFS, -4);
			valueComparatorLookup.put(ENTITY, 4);
			valueComparatorLookup.put(ENTITIES, 4);
			valueComparatorLookup.put(INTEGER, -32);
			valueComparatorLookup.put(LONG, -35);
			valueComparatorLookup.put(INT, -32);
			valueComparatorLookup.put(SHORT, -42);
			valueComparatorLookup.put(BYTE, -25);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -37);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -37);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -37);
			valueComparatorLookup.put(POSITIVE_INTEGER, -39);
			valueComparatorLookup.put(UNSIGNED_LONG, -44);
			valueComparatorLookup.put(UNSIGNED_INT, -44);
			valueComparatorLookup.put(UNSIGNED_SHORT, -44);
			valueComparatorLookup.put(UNSIGNED_BYTE, -44);
			valueComparatorLookup.put(YEARMONTHDURATION, -48);
		} else if (this == IDREF) {
			valueComparatorLookup.put(DURATION, -27);
			valueComparatorLookup.put(DATETIME, -27);
			valueComparatorLookup.put(DATETIMESTAMP, -27);
			valueComparatorLookup.put(DAYTIMEDURATION, -27);
			valueComparatorLookup.put(TIME, -43);
			valueComparatorLookup.put(DATE, -27);
			valueComparatorLookup.put(GYEARMONTH, -30);
			valueComparatorLookup.put(GYEAR, -30);
			valueComparatorLookup.put(GMONTHDAY, -30);
			valueComparatorLookup.put(GDAY, -30);
			valueComparatorLookup.put(GMONTH, -30);
			valueComparatorLookup.put(STRING, -42);
			valueComparatorLookup.put(BOOLEAN, -25);
			valueComparatorLookup.put(BASE64BINARY, -25);
			valueComparatorLookup.put(HEXBINARY, -31);
			valueComparatorLookup.put(FLOAT, -29);
			valueComparatorLookup.put(DECIMAL, -27);
			valueComparatorLookup.put(DOUBLE, -27);
			valueComparatorLookup.put(ANYURI, -24);
			valueComparatorLookup.put(QNAME, -8);
			valueComparatorLookup.put(NOTATION, -5);
			valueComparatorLookup.put(NORMALIZEDSTRING, -37);
			valueComparatorLookup.put(TOKEN, -43);
			valueComparatorLookup.put(LANGUAGE, -35);
			valueComparatorLookup.put(NMTOKEN, -5);
			valueComparatorLookup.put(NMTOKENS, -5);
			valueComparatorLookup.put(NAME, -5);
			valueComparatorLookup.put(NCNAME, -5);
			valueComparatorLookup.put(ID, 3);
			valueComparatorLookup.put(IDREF, 0);
			valueComparatorLookup.put(IDREFS, -1);
			valueComparatorLookup.put(ENTITY, 4);
			valueComparatorLookup.put(ENTITIES, 4);
			valueComparatorLookup.put(INTEGER, -32);
			valueComparatorLookup.put(LONG, -35);
			valueComparatorLookup.put(INT, -32);
			valueComparatorLookup.put(SHORT, -42);
			valueComparatorLookup.put(BYTE, -25);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -37);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -37);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -37);
			valueComparatorLookup.put(POSITIVE_INTEGER, -39);
			valueComparatorLookup.put(UNSIGNED_LONG, -44);
			valueComparatorLookup.put(UNSIGNED_INT, -44);
			valueComparatorLookup.put(UNSIGNED_SHORT, -44);
			valueComparatorLookup.put(UNSIGNED_BYTE, -44);
			valueComparatorLookup.put(YEARMONTHDURATION, -48);
		} else if (this == IDREFS) {
			valueComparatorLookup.put(DURATION, -27);
			valueComparatorLookup.put(DATETIME, -27);
			valueComparatorLookup.put(DATETIMESTAMP, -27);
			valueComparatorLookup.put(DAYTIMEDURATION, -27);
			valueComparatorLookup.put(TIME, -43);
			valueComparatorLookup.put(DATE, -27);
			valueComparatorLookup.put(GYEARMONTH, -30);
			valueComparatorLookup.put(GYEAR, -30);
			valueComparatorLookup.put(GMONTHDAY, -30);
			valueComparatorLookup.put(GDAY, -30);
			valueComparatorLookup.put(GMONTH, -30);
			valueComparatorLookup.put(STRING, -42);
			valueComparatorLookup.put(BOOLEAN, -25);
			valueComparatorLookup.put(BASE64BINARY, -25);
			valueComparatorLookup.put(HEXBINARY, -31);
			valueComparatorLookup.put(FLOAT, -29);
			valueComparatorLookup.put(DECIMAL, -27);
			valueComparatorLookup.put(DOUBLE, -27);
			valueComparatorLookup.put(ANYURI, -24);
			valueComparatorLookup.put(QNAME, -8);
			valueComparatorLookup.put(NOTATION, -5);
			valueComparatorLookup.put(NORMALIZEDSTRING, -37);
			valueComparatorLookup.put(TOKEN, -43);
			valueComparatorLookup.put(LANGUAGE, -35);
			valueComparatorLookup.put(NMTOKEN, -5);
			valueComparatorLookup.put(NMTOKENS, -5);
			valueComparatorLookup.put(NAME, -5);
			valueComparatorLookup.put(NCNAME, -5);
			valueComparatorLookup.put(ID, 4);
			valueComparatorLookup.put(IDREF, 1);
			valueComparatorLookup.put(IDREFS, 0);
			valueComparatorLookup.put(ENTITY, 4);
			valueComparatorLookup.put(ENTITIES, 4);
			valueComparatorLookup.put(INTEGER, -32);
			valueComparatorLookup.put(LONG, -35);
			valueComparatorLookup.put(INT, -32);
			valueComparatorLookup.put(SHORT, -42);
			valueComparatorLookup.put(BYTE, -25);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -37);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -37);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -37);
			valueComparatorLookup.put(POSITIVE_INTEGER, -39);
			valueComparatorLookup.put(UNSIGNED_LONG, -44);
			valueComparatorLookup.put(UNSIGNED_INT, -44);
			valueComparatorLookup.put(UNSIGNED_SHORT, -44);
			valueComparatorLookup.put(UNSIGNED_BYTE, -44);
			valueComparatorLookup.put(YEARMONTHDURATION, -48);
		} else if (this == ENTITY) {
			valueComparatorLookup.put(DURATION, -31);
			valueComparatorLookup.put(DATETIME, -31);
			valueComparatorLookup.put(DATETIMESTAMP, -31);
			valueComparatorLookup.put(DAYTIMEDURATION, -31);
			valueComparatorLookup.put(TIME, -47);
			valueComparatorLookup.put(DATE, -31);
			valueComparatorLookup.put(GYEARMONTH, -34);
			valueComparatorLookup.put(GYEAR, -34);
			valueComparatorLookup.put(GMONTHDAY, -34);
			valueComparatorLookup.put(GDAY, -34);
			valueComparatorLookup.put(GMONTH, -34);
			valueComparatorLookup.put(STRING, -46);
			valueComparatorLookup.put(BOOLEAN, -29);
			valueComparatorLookup.put(BASE64BINARY, -29);
			valueComparatorLookup.put(HEXBINARY, -35);
			valueComparatorLookup.put(FLOAT, -33);
			valueComparatorLookup.put(DECIMAL, -31);
			valueComparatorLookup.put(DOUBLE, -31);
			valueComparatorLookup.put(ANYURI, -28);
			valueComparatorLookup.put(QNAME, -12);
			valueComparatorLookup.put(NOTATION, -9);
			valueComparatorLookup.put(NORMALIZEDSTRING, -41);
			valueComparatorLookup.put(TOKEN, -47);
			valueComparatorLookup.put(LANGUAGE, -39);
			valueComparatorLookup.put(NMTOKEN, -9);
			valueComparatorLookup.put(NMTOKENS, -9);
			valueComparatorLookup.put(NAME, -9);
			valueComparatorLookup.put(NCNAME, -9);
			valueComparatorLookup.put(ID, -4);
			valueComparatorLookup.put(IDREF, -4);
			valueComparatorLookup.put(IDREFS, -4);
			valueComparatorLookup.put(ENTITY, 0);
			valueComparatorLookup.put(ENTITIES, 16);
			valueComparatorLookup.put(INTEGER, -36);
			valueComparatorLookup.put(LONG, -39);
			valueComparatorLookup.put(INT, -36);
			valueComparatorLookup.put(SHORT, -46);
			valueComparatorLookup.put(BYTE, -29);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -41);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -41);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -41);
			valueComparatorLookup.put(POSITIVE_INTEGER, -43);
			valueComparatorLookup.put(UNSIGNED_LONG, -48);
			valueComparatorLookup.put(UNSIGNED_INT, -48);
			valueComparatorLookup.put(UNSIGNED_SHORT, -48);
			valueComparatorLookup.put(UNSIGNED_BYTE, -48);
			valueComparatorLookup.put(YEARMONTHDURATION, -52);
		} else if (this == ENTITIES) {
			valueComparatorLookup.put(DURATION, -31);
			valueComparatorLookup.put(DATETIME, -31);
			valueComparatorLookup.put(DATETIMESTAMP, -31);
			valueComparatorLookup.put(DAYTIMEDURATION, -31);
			valueComparatorLookup.put(TIME, -47);
			valueComparatorLookup.put(DATE, -31);
			valueComparatorLookup.put(GYEARMONTH, -34);
			valueComparatorLookup.put(GYEAR, -34);
			valueComparatorLookup.put(GMONTHDAY, -34);
			valueComparatorLookup.put(GDAY, -34);
			valueComparatorLookup.put(GMONTH, -34);
			valueComparatorLookup.put(STRING, -46);
			valueComparatorLookup.put(BOOLEAN, -29);
			valueComparatorLookup.put(BASE64BINARY, -29);
			valueComparatorLookup.put(HEXBINARY, -35);
			valueComparatorLookup.put(FLOAT, -33);
			valueComparatorLookup.put(DECIMAL, -31);
			valueComparatorLookup.put(DOUBLE, -31);
			valueComparatorLookup.put(ANYURI, -28);
			valueComparatorLookup.put(QNAME, -12);
			valueComparatorLookup.put(NOTATION, -9);
			valueComparatorLookup.put(NORMALIZEDSTRING, -41);
			valueComparatorLookup.put(TOKEN, -47);
			valueComparatorLookup.put(LANGUAGE, -39);
			valueComparatorLookup.put(NMTOKEN, -9);
			valueComparatorLookup.put(NMTOKENS, -9);
			valueComparatorLookup.put(NAME, -9);
			valueComparatorLookup.put(NCNAME, -9);
			valueComparatorLookup.put(ID, -4);
			valueComparatorLookup.put(IDREF, -4);
			valueComparatorLookup.put(IDREFS, -4);
			valueComparatorLookup.put(ENTITY, -16);
			valueComparatorLookup.put(ENTITIES, 0);
			valueComparatorLookup.put(INTEGER, -36);
			valueComparatorLookup.put(LONG, -39);
			valueComparatorLookup.put(INT, -36);
			valueComparatorLookup.put(SHORT, -46);
			valueComparatorLookup.put(BYTE, -29);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -41);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -41);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -41);
			valueComparatorLookup.put(POSITIVE_INTEGER, -43);
			valueComparatorLookup.put(UNSIGNED_LONG, -48);
			valueComparatorLookup.put(UNSIGNED_INT, -48);
			valueComparatorLookup.put(UNSIGNED_SHORT, -48);
			valueComparatorLookup.put(UNSIGNED_BYTE, -48);
			valueComparatorLookup.put(YEARMONTHDURATION, -52);
		} else if (this == INTEGER) {
			valueComparatorLookup.put(DURATION, 5);
			valueComparatorLookup.put(DATETIME, 5);
			valueComparatorLookup.put(DATETIMESTAMP, 5);
			valueComparatorLookup.put(DAYTIMEDURATION, 5);
			valueComparatorLookup.put(TIME, -11);
			valueComparatorLookup.put(DATE, 5);
			valueComparatorLookup.put(GYEARMONTH, 2);
			valueComparatorLookup.put(GYEAR, 2);
			valueComparatorLookup.put(GMONTHDAY, 2);
			valueComparatorLookup.put(GDAY, 2);
			valueComparatorLookup.put(GMONTH, 2);
			valueComparatorLookup.put(STRING, -10);
			valueComparatorLookup.put(BOOLEAN, 7);
			valueComparatorLookup.put(BASE64BINARY, 7);
			valueComparatorLookup.put(HEXBINARY, 1);
			valueComparatorLookup.put(FLOAT, 3);
			valueComparatorLookup.put(DECIMAL, 5);
			valueComparatorLookup.put(DOUBLE, 5);
			valueComparatorLookup.put(ANYURI, 8);
			valueComparatorLookup.put(QNAME, 24);
			valueComparatorLookup.put(NOTATION, 27);
			valueComparatorLookup.put(NORMALIZEDSTRING, -5);
			valueComparatorLookup.put(TOKEN, -11);
			valueComparatorLookup.put(LANGUAGE, -3);
			valueComparatorLookup.put(NMTOKEN, 27);
			valueComparatorLookup.put(NMTOKENS, 27);
			valueComparatorLookup.put(NAME, 27);
			valueComparatorLookup.put(NCNAME, 27);
			valueComparatorLookup.put(ID, 32);
			valueComparatorLookup.put(IDREF, 32);
			valueComparatorLookup.put(IDREFS, 32);
			valueComparatorLookup.put(ENTITY, 36);
			valueComparatorLookup.put(ENTITIES, 36);
			valueComparatorLookup.put(INTEGER, 0);
			valueComparatorLookup.put(LONG, -3);
			valueComparatorLookup.put(INT, 4);
			valueComparatorLookup.put(SHORT, -10);
			valueComparatorLookup.put(BYTE, 7);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -5);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -5);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -5);
			valueComparatorLookup.put(POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(UNSIGNED_LONG, -12);
			valueComparatorLookup.put(UNSIGNED_INT, -12);
			valueComparatorLookup.put(UNSIGNED_SHORT, -12);
			valueComparatorLookup.put(UNSIGNED_BYTE, -12);
			valueComparatorLookup.put(YEARMONTHDURATION, -16);
		} else if (this == LONG) {
			valueComparatorLookup.put(DURATION, 8);
			valueComparatorLookup.put(DATETIME, 8);
			valueComparatorLookup.put(DATETIMESTAMP, 8);
			valueComparatorLookup.put(DAYTIMEDURATION, 8);
			valueComparatorLookup.put(TIME, -8);
			valueComparatorLookup.put(DATE, 8);
			valueComparatorLookup.put(GYEARMONTH, 5);
			valueComparatorLookup.put(GYEAR, 5);
			valueComparatorLookup.put(GMONTHDAY, 5);
			valueComparatorLookup.put(GDAY, 5);
			valueComparatorLookup.put(GMONTH, 5);
			valueComparatorLookup.put(STRING, -7);
			valueComparatorLookup.put(BOOLEAN, 10);
			valueComparatorLookup.put(BASE64BINARY, 10);
			valueComparatorLookup.put(HEXBINARY, 4);
			valueComparatorLookup.put(FLOAT, 6);
			valueComparatorLookup.put(DECIMAL, 8);
			valueComparatorLookup.put(DOUBLE, 8);
			valueComparatorLookup.put(ANYURI, 11);
			valueComparatorLookup.put(QNAME, 27);
			valueComparatorLookup.put(NOTATION, 30);
			valueComparatorLookup.put(NORMALIZEDSTRING, -2);
			valueComparatorLookup.put(TOKEN, -8);
			valueComparatorLookup.put(LANGUAGE, 14);
			valueComparatorLookup.put(NMTOKEN, 30);
			valueComparatorLookup.put(NMTOKENS, 30);
			valueComparatorLookup.put(NAME, 30);
			valueComparatorLookup.put(NCNAME, 30);
			valueComparatorLookup.put(ID, 35);
			valueComparatorLookup.put(IDREF, 35);
			valueComparatorLookup.put(IDREFS, 35);
			valueComparatorLookup.put(ENTITY, 39);
			valueComparatorLookup.put(ENTITIES, 39);
			valueComparatorLookup.put(INTEGER, 3);
			valueComparatorLookup.put(LONG, 0);
			valueComparatorLookup.put(INT, 3);
			valueComparatorLookup.put(SHORT, -7);
			valueComparatorLookup.put(BYTE, 10);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -2);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -2);
			valueComparatorLookup.put(POSITIVE_INTEGER, -4);
			valueComparatorLookup.put(UNSIGNED_LONG, -9);
			valueComparatorLookup.put(UNSIGNED_INT, -9);
			valueComparatorLookup.put(UNSIGNED_SHORT, -9);
			valueComparatorLookup.put(UNSIGNED_BYTE, -9);
			valueComparatorLookup.put(YEARMONTHDURATION, -13);
		} else if (this == INT) {
			valueComparatorLookup.put(DURATION, 5);
			valueComparatorLookup.put(DATETIME, 5);
			valueComparatorLookup.put(DATETIMESTAMP, 5);
			valueComparatorLookup.put(DAYTIMEDURATION, 5);
			valueComparatorLookup.put(TIME, -11);
			valueComparatorLookup.put(DATE, 5);
			valueComparatorLookup.put(GYEARMONTH, 2);
			valueComparatorLookup.put(GYEAR, 2);
			valueComparatorLookup.put(GMONTHDAY, 2);
			valueComparatorLookup.put(GDAY, 2);
			valueComparatorLookup.put(GMONTH, 2);
			valueComparatorLookup.put(STRING, -10);
			valueComparatorLookup.put(BOOLEAN, 7);
			valueComparatorLookup.put(BASE64BINARY, 7);
			valueComparatorLookup.put(HEXBINARY, 1);
			valueComparatorLookup.put(FLOAT, 3);
			valueComparatorLookup.put(DECIMAL, 5);
			valueComparatorLookup.put(DOUBLE, 5);
			valueComparatorLookup.put(ANYURI, 8);
			valueComparatorLookup.put(QNAME, 24);
			valueComparatorLookup.put(NOTATION, 27);
			valueComparatorLookup.put(NORMALIZEDSTRING, -5);
			valueComparatorLookup.put(TOKEN, -11);
			valueComparatorLookup.put(LANGUAGE, -3);
			valueComparatorLookup.put(NMTOKEN, 27);
			valueComparatorLookup.put(NMTOKENS, 27);
			valueComparatorLookup.put(NAME, 27);
			valueComparatorLookup.put(NCNAME, 27);
			valueComparatorLookup.put(ID, 32);
			valueComparatorLookup.put(IDREF, 32);
			valueComparatorLookup.put(IDREFS, 32);
			valueComparatorLookup.put(ENTITY, 36);
			valueComparatorLookup.put(ENTITIES, 36);
			valueComparatorLookup.put(INTEGER, -4);
			valueComparatorLookup.put(LONG, -3);
			valueComparatorLookup.put(INT, 0);
			valueComparatorLookup.put(SHORT, -10);
			valueComparatorLookup.put(BYTE, 7);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -5);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -5);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -5);
			valueComparatorLookup.put(POSITIVE_INTEGER, -7);
			valueComparatorLookup.put(UNSIGNED_LONG, -12);
			valueComparatorLookup.put(UNSIGNED_INT, -12);
			valueComparatorLookup.put(UNSIGNED_SHORT, -12);
			valueComparatorLookup.put(UNSIGNED_BYTE, -12);
			valueComparatorLookup.put(YEARMONTHDURATION, -16);
		} else if (this == SHORT) {
			valueComparatorLookup.put(DURATION, 15);
			valueComparatorLookup.put(DATETIME, 15);
			valueComparatorLookup.put(DATETIMESTAMP, 15);
			valueComparatorLookup.put(DAYTIMEDURATION, 15);
			valueComparatorLookup.put(TIME, -1);
			valueComparatorLookup.put(DATE, 15);
			valueComparatorLookup.put(GYEARMONTH, 12);
			valueComparatorLookup.put(GYEAR, 12);
			valueComparatorLookup.put(GMONTHDAY, 12);
			valueComparatorLookup.put(GDAY, 12);
			valueComparatorLookup.put(GMONTH, 12);
			valueComparatorLookup.put(STRING, -12);
			valueComparatorLookup.put(BOOLEAN, 17);
			valueComparatorLookup.put(BASE64BINARY, 17);
			valueComparatorLookup.put(HEXBINARY, 11);
			valueComparatorLookup.put(FLOAT, 13);
			valueComparatorLookup.put(DECIMAL, 15);
			valueComparatorLookup.put(DOUBLE, 15);
			valueComparatorLookup.put(ANYURI, 18);
			valueComparatorLookup.put(QNAME, 34);
			valueComparatorLookup.put(NOTATION, 37);
			valueComparatorLookup.put(NORMALIZEDSTRING, 5);
			valueComparatorLookup.put(TOKEN, -1);
			valueComparatorLookup.put(LANGUAGE, 7);
			valueComparatorLookup.put(NMTOKEN, 37);
			valueComparatorLookup.put(NMTOKENS, 37);
			valueComparatorLookup.put(NAME, 37);
			valueComparatorLookup.put(NCNAME, 37);
			valueComparatorLookup.put(ID, 42);
			valueComparatorLookup.put(IDREF, 42);
			valueComparatorLookup.put(IDREFS, 42);
			valueComparatorLookup.put(ENTITY, 46);
			valueComparatorLookup.put(ENTITIES, 46);
			valueComparatorLookup.put(INTEGER, 10);
			valueComparatorLookup.put(LONG, 7);
			valueComparatorLookup.put(INT, 10);
			valueComparatorLookup.put(SHORT, 0);
			valueComparatorLookup.put(BYTE, 17);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 5);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 5);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 5);
			valueComparatorLookup.put(POSITIVE_INTEGER, 3);
			valueComparatorLookup.put(UNSIGNED_LONG, -2);
			valueComparatorLookup.put(UNSIGNED_INT, -2);
			valueComparatorLookup.put(UNSIGNED_SHORT, -2);
			valueComparatorLookup.put(UNSIGNED_BYTE, -2);
			valueComparatorLookup.put(YEARMONTHDURATION, -6);
		} else if (this == BYTE) {
			valueComparatorLookup.put(DURATION, -2);
			valueComparatorLookup.put(DATETIME, -2);
			valueComparatorLookup.put(DATETIMESTAMP, -2);
			valueComparatorLookup.put(DAYTIMEDURATION, -2);
			valueComparatorLookup.put(TIME, -18);
			valueComparatorLookup.put(DATE, -2);
			valueComparatorLookup.put(GYEARMONTH, -5);
			valueComparatorLookup.put(GYEAR, -5);
			valueComparatorLookup.put(GMONTHDAY, -5);
			valueComparatorLookup.put(GDAY, -5);
			valueComparatorLookup.put(GMONTH, -5);
			valueComparatorLookup.put(STRING, -17);
			valueComparatorLookup.put(BOOLEAN, 10);
			valueComparatorLookup.put(BASE64BINARY, 24);
			valueComparatorLookup.put(HEXBINARY, -6);
			valueComparatorLookup.put(FLOAT, -4);
			valueComparatorLookup.put(DECIMAL, -2);
			valueComparatorLookup.put(DOUBLE, -2);
			valueComparatorLookup.put(ANYURI, 1);
			valueComparatorLookup.put(QNAME, 17);
			valueComparatorLookup.put(NOTATION, 20);
			valueComparatorLookup.put(NORMALIZEDSTRING, -12);
			valueComparatorLookup.put(TOKEN, -18);
			valueComparatorLookup.put(LANGUAGE, -10);
			valueComparatorLookup.put(NMTOKEN, 20);
			valueComparatorLookup.put(NMTOKENS, 20);
			valueComparatorLookup.put(NAME, 20);
			valueComparatorLookup.put(NCNAME, 20);
			valueComparatorLookup.put(ID, 25);
			valueComparatorLookup.put(IDREF, 25);
			valueComparatorLookup.put(IDREFS, 25);
			valueComparatorLookup.put(ENTITY, 29);
			valueComparatorLookup.put(ENTITIES, 29);
			valueComparatorLookup.put(INTEGER, -7);
			valueComparatorLookup.put(LONG, -10);
			valueComparatorLookup.put(INT, -7);
			valueComparatorLookup.put(SHORT, -17);
			valueComparatorLookup.put(BYTE, 0);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -12);
			valueComparatorLookup.put(NEGATIVE_INTEGER, -12);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -12);
			valueComparatorLookup.put(POSITIVE_INTEGER, -14);
			valueComparatorLookup.put(UNSIGNED_LONG, -19);
			valueComparatorLookup.put(UNSIGNED_INT, -19);
			valueComparatorLookup.put(UNSIGNED_SHORT, -19);
			valueComparatorLookup.put(UNSIGNED_BYTE, -19);
			valueComparatorLookup.put(YEARMONTHDURATION, -23);
		} else if (this == NON_POSITIVE_INTEGER) {
			valueComparatorLookup.put(DURATION, 10);
			valueComparatorLookup.put(DATETIME, 10);
			valueComparatorLookup.put(DATETIMESTAMP, 10);
			valueComparatorLookup.put(DAYTIMEDURATION, 10);
			valueComparatorLookup.put(TIME, -6);
			valueComparatorLookup.put(DATE, 10);
			valueComparatorLookup.put(GYEARMONTH, 7);
			valueComparatorLookup.put(GYEAR, 7);
			valueComparatorLookup.put(GMONTHDAY, 7);
			valueComparatorLookup.put(GDAY, 7);
			valueComparatorLookup.put(GMONTH, 7);
			valueComparatorLookup.put(STRING, -5);
			valueComparatorLookup.put(BOOLEAN, 12);
			valueComparatorLookup.put(BASE64BINARY, 12);
			valueComparatorLookup.put(HEXBINARY, 6);
			valueComparatorLookup.put(FLOAT, 8);
			valueComparatorLookup.put(DECIMAL, 10);
			valueComparatorLookup.put(DOUBLE, 10);
			valueComparatorLookup.put(ANYURI, 13);
			valueComparatorLookup.put(QNAME, 29);
			valueComparatorLookup.put(NOTATION, 32);
			valueComparatorLookup.put(NORMALIZEDSTRING, -4);
			valueComparatorLookup.put(TOKEN, -6);
			valueComparatorLookup.put(LANGUAGE, 2);
			valueComparatorLookup.put(NMTOKEN, 32);
			valueComparatorLookup.put(NMTOKENS, 32);
			valueComparatorLookup.put(NAME, 32);
			valueComparatorLookup.put(NCNAME, 32);
			valueComparatorLookup.put(ID, 37);
			valueComparatorLookup.put(IDREF, 37);
			valueComparatorLookup.put(IDREFS, 37);
			valueComparatorLookup.put(ENTITY, 41);
			valueComparatorLookup.put(ENTITIES, 41);
			valueComparatorLookup.put(INTEGER, 5);
			valueComparatorLookup.put(LONG, 2);
			valueComparatorLookup.put(INT, 5);
			valueComparatorLookup.put(SHORT, -5);
			valueComparatorLookup.put(BYTE, 12);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 0);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 2);
			valueComparatorLookup.put(POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(UNSIGNED_LONG, -7);
			valueComparatorLookup.put(UNSIGNED_INT, -7);
			valueComparatorLookup.put(UNSIGNED_SHORT, -7);
			valueComparatorLookup.put(UNSIGNED_BYTE, -7);
			valueComparatorLookup.put(YEARMONTHDURATION, -11);
		} else if (this == NEGATIVE_INTEGER) {
			valueComparatorLookup.put(DURATION, 10);
			valueComparatorLookup.put(DATETIME, 10);
			valueComparatorLookup.put(DATETIMESTAMP, 10);
			valueComparatorLookup.put(DAYTIMEDURATION, 10);
			valueComparatorLookup.put(TIME, -6);
			valueComparatorLookup.put(DATE, 10);
			valueComparatorLookup.put(GYEARMONTH, 7);
			valueComparatorLookup.put(GYEAR, 7);
			valueComparatorLookup.put(GMONTHDAY, 7);
			valueComparatorLookup.put(GDAY, 7);
			valueComparatorLookup.put(GMONTH, 7);
			valueComparatorLookup.put(STRING, -5);
			valueComparatorLookup.put(BOOLEAN, 12);
			valueComparatorLookup.put(BASE64BINARY, 12);
			valueComparatorLookup.put(HEXBINARY, 6);
			valueComparatorLookup.put(FLOAT, 8);
			valueComparatorLookup.put(DECIMAL, 10);
			valueComparatorLookup.put(DOUBLE, 10);
			valueComparatorLookup.put(ANYURI, 13);
			valueComparatorLookup.put(QNAME, 29);
			valueComparatorLookup.put(NOTATION, 32);
			valueComparatorLookup.put(NORMALIZEDSTRING, -10);
			valueComparatorLookup.put(TOKEN, -6);
			valueComparatorLookup.put(LANGUAGE, 2);
			valueComparatorLookup.put(NMTOKEN, 32);
			valueComparatorLookup.put(NMTOKENS, 32);
			valueComparatorLookup.put(NAME, 32);
			valueComparatorLookup.put(NCNAME, 32);
			valueComparatorLookup.put(ID, 37);
			valueComparatorLookup.put(IDREF, 37);
			valueComparatorLookup.put(IDREFS, 37);
			valueComparatorLookup.put(ENTITY, 41);
			valueComparatorLookup.put(ENTITIES, 41);
			valueComparatorLookup.put(INTEGER, 5);
			valueComparatorLookup.put(LONG, 2);
			valueComparatorLookup.put(INT, 5);
			valueComparatorLookup.put(SHORT, -5);
			valueComparatorLookup.put(BYTE, 12);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -10);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 0);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, -10);
			valueComparatorLookup.put(POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(UNSIGNED_LONG, -7);
			valueComparatorLookup.put(UNSIGNED_INT, -7);
			valueComparatorLookup.put(UNSIGNED_SHORT, -7);
			valueComparatorLookup.put(UNSIGNED_BYTE, -7);
			valueComparatorLookup.put(YEARMONTHDURATION, -11);
		} else if (this == NON_NEGATIVE_INTEGER) {
			valueComparatorLookup.put(DURATION, 10);
			valueComparatorLookup.put(DATETIME, 10);
			valueComparatorLookup.put(DATETIMESTAMP, 10);
			valueComparatorLookup.put(DAYTIMEDURATION, 10);
			valueComparatorLookup.put(TIME, -6);
			valueComparatorLookup.put(DATE, 10);
			valueComparatorLookup.put(GYEARMONTH, 7);
			valueComparatorLookup.put(GYEAR, 7);
			valueComparatorLookup.put(GMONTHDAY, 7);
			valueComparatorLookup.put(GDAY, 7);
			valueComparatorLookup.put(GMONTH, 7);
			valueComparatorLookup.put(STRING, -5);
			valueComparatorLookup.put(BOOLEAN, 12);
			valueComparatorLookup.put(BASE64BINARY, 12);
			valueComparatorLookup.put(HEXBINARY, 6);
			valueComparatorLookup.put(FLOAT, 8);
			valueComparatorLookup.put(DECIMAL, 10);
			valueComparatorLookup.put(DOUBLE, 10);
			valueComparatorLookup.put(ANYURI, 13);
			valueComparatorLookup.put(QNAME, 29);
			valueComparatorLookup.put(NOTATION, 32);
			valueComparatorLookup.put(NORMALIZEDSTRING, -4);
			valueComparatorLookup.put(TOKEN, -6);
			valueComparatorLookup.put(LANGUAGE, 2);
			valueComparatorLookup.put(NMTOKEN, 32);
			valueComparatorLookup.put(NMTOKENS, 32);
			valueComparatorLookup.put(NAME, 32);
			valueComparatorLookup.put(NCNAME, 32);
			valueComparatorLookup.put(ID, 37);
			valueComparatorLookup.put(IDREF, 37);
			valueComparatorLookup.put(IDREFS, 37);
			valueComparatorLookup.put(ENTITY, 41);
			valueComparatorLookup.put(ENTITIES, 41);
			valueComparatorLookup.put(INTEGER, 5);
			valueComparatorLookup.put(LONG, 2);
			valueComparatorLookup.put(INT, 5);
			valueComparatorLookup.put(SHORT, -5);
			valueComparatorLookup.put(BYTE, 12);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 10);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 0);
			valueComparatorLookup.put(POSITIVE_INTEGER, -2);
			valueComparatorLookup.put(UNSIGNED_LONG, -7);
			valueComparatorLookup.put(UNSIGNED_INT, -7);
			valueComparatorLookup.put(UNSIGNED_SHORT, -7);
			valueComparatorLookup.put(UNSIGNED_BYTE, -7);
			valueComparatorLookup.put(YEARMONTHDURATION, -11);
		} else if (this == POSITIVE_INTEGER) {
			valueComparatorLookup.put(DURATION, 12);
			valueComparatorLookup.put(DATETIME, 12);
			valueComparatorLookup.put(DATETIMESTAMP, 12);
			valueComparatorLookup.put(DAYTIMEDURATION, 12);
			valueComparatorLookup.put(TIME, -4);
			valueComparatorLookup.put(DATE, 12);
			valueComparatorLookup.put(GYEARMONTH, 9);
			valueComparatorLookup.put(GYEAR, 9);
			valueComparatorLookup.put(GMONTHDAY, 9);
			valueComparatorLookup.put(GDAY, 9);
			valueComparatorLookup.put(GMONTH, 9);
			valueComparatorLookup.put(STRING, -3);
			valueComparatorLookup.put(BOOLEAN, 14);
			valueComparatorLookup.put(BASE64BINARY, 14);
			valueComparatorLookup.put(HEXBINARY, 8);
			valueComparatorLookup.put(FLOAT, 10);
			valueComparatorLookup.put(DECIMAL, 12);
			valueComparatorLookup.put(DOUBLE, 12);
			valueComparatorLookup.put(ANYURI, 15);
			valueComparatorLookup.put(QNAME, 31);
			valueComparatorLookup.put(NOTATION, 34);
			valueComparatorLookup.put(NORMALIZEDSTRING, 2);
			valueComparatorLookup.put(TOKEN, -4);
			valueComparatorLookup.put(LANGUAGE, 4);
			valueComparatorLookup.put(NMTOKEN, 34);
			valueComparatorLookup.put(NMTOKENS, 34);
			valueComparatorLookup.put(NAME, 34);
			valueComparatorLookup.put(NCNAME, 34);
			valueComparatorLookup.put(ID, 39);
			valueComparatorLookup.put(IDREF, 39);
			valueComparatorLookup.put(IDREFS, 39);
			valueComparatorLookup.put(ENTITY, 43);
			valueComparatorLookup.put(ENTITIES, 43);
			valueComparatorLookup.put(INTEGER, 7);
			valueComparatorLookup.put(LONG, 4);
			valueComparatorLookup.put(INT, 7);
			valueComparatorLookup.put(SHORT, -3);
			valueComparatorLookup.put(BYTE, 14);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 2);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 2);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 2);
			valueComparatorLookup.put(POSITIVE_INTEGER, 0);
			valueComparatorLookup.put(UNSIGNED_LONG, -5);
			valueComparatorLookup.put(UNSIGNED_INT, -5);
			valueComparatorLookup.put(UNSIGNED_SHORT, -5);
			valueComparatorLookup.put(UNSIGNED_BYTE, -5);
			valueComparatorLookup.put(YEARMONTHDURATION, -9);
		} else if (this == UNSIGNED_LONG) {
			valueComparatorLookup.put(DURATION, 17);
			valueComparatorLookup.put(DATETIME, 17);
			valueComparatorLookup.put(DATETIMESTAMP, 17);
			valueComparatorLookup.put(DAYTIMEDURATION, 17);
			valueComparatorLookup.put(TIME, 1);
			valueComparatorLookup.put(DATE, 17);
			valueComparatorLookup.put(GYEARMONTH, 14);
			valueComparatorLookup.put(GYEAR, 14);
			valueComparatorLookup.put(GMONTHDAY, 14);
			valueComparatorLookup.put(GDAY, 14);
			valueComparatorLookup.put(GMONTH, 14);
			valueComparatorLookup.put(STRING, 2);
			valueComparatorLookup.put(BOOLEAN, 19);
			valueComparatorLookup.put(BASE64BINARY, 19);
			valueComparatorLookup.put(HEXBINARY, 13);
			valueComparatorLookup.put(FLOAT, 15);
			valueComparatorLookup.put(DECIMAL, 17);
			valueComparatorLookup.put(DOUBLE, 17);
			valueComparatorLookup.put(ANYURI, 20);
			valueComparatorLookup.put(QNAME, 36);
			valueComparatorLookup.put(NOTATION, 39);
			valueComparatorLookup.put(NORMALIZEDSTRING, 7);
			valueComparatorLookup.put(TOKEN, 1);
			valueComparatorLookup.put(LANGUAGE, 9);
			valueComparatorLookup.put(NMTOKEN, 39);
			valueComparatorLookup.put(NMTOKENS, 39);
			valueComparatorLookup.put(NAME, 39);
			valueComparatorLookup.put(NCNAME, 39);
			valueComparatorLookup.put(ID, 44);
			valueComparatorLookup.put(IDREF, 44);
			valueComparatorLookup.put(IDREFS, 44);
			valueComparatorLookup.put(ENTITY, 48);
			valueComparatorLookup.put(ENTITIES, 48);
			valueComparatorLookup.put(INTEGER, 12);
			valueComparatorLookup.put(LONG, 9);
			valueComparatorLookup.put(INT, 12);
			valueComparatorLookup.put(SHORT, 2);
			valueComparatorLookup.put(BYTE, 19);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(POSITIVE_INTEGER, 5);
			valueComparatorLookup.put(UNSIGNED_LONG, 0);
			valueComparatorLookup.put(UNSIGNED_INT, 3);
			valueComparatorLookup.put(UNSIGNED_SHORT, -7);
			valueComparatorLookup.put(UNSIGNED_BYTE, 10);
			valueComparatorLookup.put(YEARMONTHDURATION, -4);
		} else if (this == UNSIGNED_INT) {
			valueComparatorLookup.put(DURATION, 17);
			valueComparatorLookup.put(DATETIME, 17);
			valueComparatorLookup.put(DATETIMESTAMP, 17);
			valueComparatorLookup.put(DAYTIMEDURATION, 17);
			valueComparatorLookup.put(TIME, 1);
			valueComparatorLookup.put(DATE, 17);
			valueComparatorLookup.put(GYEARMONTH, 14);
			valueComparatorLookup.put(GYEAR, 14);
			valueComparatorLookup.put(GMONTHDAY, 14);
			valueComparatorLookup.put(GDAY, 14);
			valueComparatorLookup.put(GMONTH, 14);
			valueComparatorLookup.put(STRING, 2);
			valueComparatorLookup.put(BOOLEAN, 19);
			valueComparatorLookup.put(BASE64BINARY, 19);
			valueComparatorLookup.put(HEXBINARY, 13);
			valueComparatorLookup.put(FLOAT, 15);
			valueComparatorLookup.put(DECIMAL, 17);
			valueComparatorLookup.put(DOUBLE, 17);
			valueComparatorLookup.put(ANYURI, 20);
			valueComparatorLookup.put(QNAME, 36);
			valueComparatorLookup.put(NOTATION, 39);
			valueComparatorLookup.put(NORMALIZEDSTRING, 7);
			valueComparatorLookup.put(TOKEN, 1);
			valueComparatorLookup.put(LANGUAGE, 9);
			valueComparatorLookup.put(NMTOKEN, 39);
			valueComparatorLookup.put(NMTOKENS, 39);
			valueComparatorLookup.put(NAME, 39);
			valueComparatorLookup.put(NCNAME, 39);
			valueComparatorLookup.put(ID, 44);
			valueComparatorLookup.put(IDREF, 44);
			valueComparatorLookup.put(IDREFS, 44);
			valueComparatorLookup.put(ENTITY, 48);
			valueComparatorLookup.put(ENTITIES, 48);
			valueComparatorLookup.put(INTEGER, 12);
			valueComparatorLookup.put(LONG, 9);
			valueComparatorLookup.put(INT, 12);
			valueComparatorLookup.put(SHORT, 2);
			valueComparatorLookup.put(BYTE, 19);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(POSITIVE_INTEGER, 5);
			valueComparatorLookup.put(UNSIGNED_LONG, -3);
			valueComparatorLookup.put(UNSIGNED_INT, 0);
			valueComparatorLookup.put(UNSIGNED_SHORT, -10);
			valueComparatorLookup.put(UNSIGNED_BYTE, 7);
			valueComparatorLookup.put(YEARMONTHDURATION, -4);
		} else if (this == UNSIGNED_SHORT) {
			valueComparatorLookup.put(DURATION, 17);
			valueComparatorLookup.put(DATETIME, 17);
			valueComparatorLookup.put(DATETIMESTAMP, 17);
			valueComparatorLookup.put(DAYTIMEDURATION, 17);
			valueComparatorLookup.put(TIME, 1);
			valueComparatorLookup.put(DATE, 17);
			valueComparatorLookup.put(GYEARMONTH, 14);
			valueComparatorLookup.put(GYEAR, 14);
			valueComparatorLookup.put(GMONTHDAY, 14);
			valueComparatorLookup.put(GDAY, 14);
			valueComparatorLookup.put(GMONTH, 14);
			valueComparatorLookup.put(STRING, 2);
			valueComparatorLookup.put(BOOLEAN, 19);
			valueComparatorLookup.put(BASE64BINARY, 19);
			valueComparatorLookup.put(HEXBINARY, 13);
			valueComparatorLookup.put(FLOAT, 15);
			valueComparatorLookup.put(DECIMAL, 17);
			valueComparatorLookup.put(DOUBLE, 17);
			valueComparatorLookup.put(ANYURI, 20);
			valueComparatorLookup.put(QNAME, 36);
			valueComparatorLookup.put(NOTATION, 39);
			valueComparatorLookup.put(NORMALIZEDSTRING, 7);
			valueComparatorLookup.put(TOKEN, 1);
			valueComparatorLookup.put(LANGUAGE, 9);
			valueComparatorLookup.put(NMTOKEN, 39);
			valueComparatorLookup.put(NMTOKENS, 39);
			valueComparatorLookup.put(NAME, 39);
			valueComparatorLookup.put(NCNAME, 39);
			valueComparatorLookup.put(ID, 44);
			valueComparatorLookup.put(IDREF, 44);
			valueComparatorLookup.put(IDREFS, 44);
			valueComparatorLookup.put(ENTITY, 48);
			valueComparatorLookup.put(ENTITIES, 48);
			valueComparatorLookup.put(INTEGER, 12);
			valueComparatorLookup.put(LONG, 9);
			valueComparatorLookup.put(INT, 12);
			valueComparatorLookup.put(SHORT, 2);
			valueComparatorLookup.put(BYTE, 19);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(POSITIVE_INTEGER, 5);
			valueComparatorLookup.put(UNSIGNED_LONG, 7);
			valueComparatorLookup.put(UNSIGNED_INT, 10);
			valueComparatorLookup.put(UNSIGNED_SHORT, 0);
			valueComparatorLookup.put(UNSIGNED_BYTE, 17);
			valueComparatorLookup.put(YEARMONTHDURATION, -4);
		} else if (this == UNSIGNED_BYTE) {
			valueComparatorLookup.put(DURATION, 17);
			valueComparatorLookup.put(DATETIME, 17);
			valueComparatorLookup.put(DATETIMESTAMP, 17);
			valueComparatorLookup.put(DAYTIMEDURATION, 17);
			valueComparatorLookup.put(TIME, 1);
			valueComparatorLookup.put(DATE, 17);
			valueComparatorLookup.put(GYEARMONTH, 14);
			valueComparatorLookup.put(GYEAR, 14);
			valueComparatorLookup.put(GMONTHDAY, 14);
			valueComparatorLookup.put(GDAY, 14);
			valueComparatorLookup.put(GMONTH, 14);
			valueComparatorLookup.put(STRING, 2);
			valueComparatorLookup.put(BOOLEAN, 19);
			valueComparatorLookup.put(BASE64BINARY, 19);
			valueComparatorLookup.put(HEXBINARY, 13);
			valueComparatorLookup.put(FLOAT, 15);
			valueComparatorLookup.put(DECIMAL, 17);
			valueComparatorLookup.put(DOUBLE, 17);
			valueComparatorLookup.put(ANYURI, 20);
			valueComparatorLookup.put(QNAME, 36);
			valueComparatorLookup.put(NOTATION, 39);
			valueComparatorLookup.put(NORMALIZEDSTRING, 7);
			valueComparatorLookup.put(TOKEN, 1);
			valueComparatorLookup.put(LANGUAGE, 9);
			valueComparatorLookup.put(NMTOKEN, 39);
			valueComparatorLookup.put(NMTOKENS, 39);
			valueComparatorLookup.put(NAME, 39);
			valueComparatorLookup.put(NCNAME, 39);
			valueComparatorLookup.put(ID, 44);
			valueComparatorLookup.put(IDREF, 44);
			valueComparatorLookup.put(IDREFS, 44);
			valueComparatorLookup.put(ENTITY, 48);
			valueComparatorLookup.put(ENTITIES, 48);
			valueComparatorLookup.put(INTEGER, 12);
			valueComparatorLookup.put(LONG, 9);
			valueComparatorLookup.put(INT, 12);
			valueComparatorLookup.put(SHORT, 2);
			valueComparatorLookup.put(BYTE, 19);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 7);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 7);
			valueComparatorLookup.put(POSITIVE_INTEGER, 5);
			valueComparatorLookup.put(UNSIGNED_LONG, -10);
			valueComparatorLookup.put(UNSIGNED_INT, -7);
			valueComparatorLookup.put(UNSIGNED_SHORT, -17);
			valueComparatorLookup.put(UNSIGNED_BYTE, 0);
			valueComparatorLookup.put(YEARMONTHDURATION, -4);
		} else if (this == YEARMONTHDURATION) {
			valueComparatorLookup.put(DURATION, 21);
			valueComparatorLookup.put(DATETIME, 21);
			valueComparatorLookup.put(DATETIMESTAMP, 21);
			valueComparatorLookup.put(DAYTIMEDURATION, 21);
			valueComparatorLookup.put(TIME, 5);
			valueComparatorLookup.put(DATE, 21);
			valueComparatorLookup.put(GYEARMONTH, 18);
			valueComparatorLookup.put(GYEAR, 18);
			valueComparatorLookup.put(GMONTHDAY, 18);
			valueComparatorLookup.put(GDAY, 18);
			valueComparatorLookup.put(GMONTH, 18);
			valueComparatorLookup.put(STRING, 6);
			valueComparatorLookup.put(BOOLEAN, 23);
			valueComparatorLookup.put(BASE64BINARY, 23);
			valueComparatorLookup.put(HEXBINARY, 17);
			valueComparatorLookup.put(FLOAT, 19);
			valueComparatorLookup.put(DECIMAL, 21);
			valueComparatorLookup.put(DOUBLE, 21);
			valueComparatorLookup.put(ANYURI, 24);
			valueComparatorLookup.put(QNAME, 40);
			valueComparatorLookup.put(NOTATION, 43);
			valueComparatorLookup.put(NORMALIZEDSTRING, 11);
			valueComparatorLookup.put(TOKEN, 5);
			valueComparatorLookup.put(LANGUAGE, 13);
			valueComparatorLookup.put(NMTOKEN, 43);
			valueComparatorLookup.put(NMTOKENS, 43);
			valueComparatorLookup.put(NAME, 43);
			valueComparatorLookup.put(NCNAME, 43);
			valueComparatorLookup.put(ID, 48);
			valueComparatorLookup.put(IDREF, 48);
			valueComparatorLookup.put(IDREFS, 48);
			valueComparatorLookup.put(ENTITY, 52);
			valueComparatorLookup.put(ENTITIES, 52);
			valueComparatorLookup.put(INTEGER, 16);
			valueComparatorLookup.put(LONG, 13);
			valueComparatorLookup.put(INT, 16);
			valueComparatorLookup.put(SHORT, 6);
			valueComparatorLookup.put(BYTE, 23);
			valueComparatorLookup.put(NON_POSITIVE_INTEGER, 11);
			valueComparatorLookup.put(NEGATIVE_INTEGER, 11);
			valueComparatorLookup.put(NON_NEGATIVE_INTEGER, 11);
			valueComparatorLookup.put(POSITIVE_INTEGER, 9);
			valueComparatorLookup.put(UNSIGNED_LONG, 4);
			valueComparatorLookup.put(UNSIGNED_INT, 4);
			valueComparatorLookup.put(UNSIGNED_SHORT, 4);
			valueComparatorLookup.put(UNSIGNED_BYTE, 4);
			valueComparatorLookup.put(YEARMONTHDURATION, 0);
		}

		this.valueComparatorLookup = valueComparatorLookup;
	}
}
