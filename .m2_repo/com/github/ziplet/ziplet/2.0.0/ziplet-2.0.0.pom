<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<groupId>com.github.ziplet</groupId>
	<artifactId>ziplet</artifactId>
	<version>2.0.0</version>
	<packaging>jar</packaging>
	<name>ziplet</name>
	<description>his filter can, based on HTTP headers in a HttpServletRequest, compress data written to the
		HttpServletResponse, or decompress data read from the request. When supported by the client browser,
		this can potentially greatly reduce the number of bytes written across the network from and to the client.
		As a Filter, this class can also be easily added to any J2EE 1.3+ web application.
	</description>
	<url>https://github.com/nbartels/pjl-comp-filter</url>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:ziplet/ziplet.git</connection>
		<developerConnection>scm:git:git@github.com:ziplet/ziplet.git</developerConnection>
		<url>git@github.com:ziplet/ziplet.git</url>
	</scm>
	<developers>
		<developer>
			<id>fgaule</id>
			<name>Federico Gaule</name>
			<email>federico.gaule@gmail.com</email>
			<timezone>-3</timezone>
			<organization>Despegar</organization>
			<organizationUrl>http://www.despegar.com</organizationUrl>
		</developer>
		<developer>
			<id>fededonna</id>
			<name>Federico Donnarumma</name>
			<email>fdonnarumma@gmail.com</email>
			<timezone>-3</timezone>
			<organization>Despegar</organization>
			<organizationUrl>http://www.despegar.com</organizationUrl>
		</developer>
	</developers>

	<properties>
		<sl4j.version>1.7.6</sl4j.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${sl4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>${sl4j.version}</version>
		</dependency>

		<!--TEST-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mockrunner</groupId>
			<artifactId>mockrunner-servlet</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- Make a jar and put the sources in the jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<maxmemory>2048m</maxmemory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.16</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
